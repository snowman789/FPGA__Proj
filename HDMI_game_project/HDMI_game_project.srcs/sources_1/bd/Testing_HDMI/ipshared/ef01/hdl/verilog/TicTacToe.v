// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="TicTacToe,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.875750,HLS_SYN_LAT=4,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=29,HLS_SYN_LUT=1168,HLS_VERSION=2018_3}" *)

module TicTacToe (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        player1_win,
        player2_win,
        boardOut_a_V,
        boardOut_b_V,
        boardOut_c_V,
        boardOut_d_V,
        boardOut_e_V,
        boardOut_f_V,
        boardOut_g_V,
        boardOut_h_V,
        boardOut_i_V,
        player1,
        player2,
        left_r,
        right_r,
        start,
        sel_V
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   player1_win;
output   player2_win;
output  [1:0] boardOut_a_V;
output  [1:0] boardOut_b_V;
output  [1:0] boardOut_c_V;
output  [1:0] boardOut_d_V;
output  [1:0] boardOut_e_V;
output  [1:0] boardOut_f_V;
output  [1:0] boardOut_g_V;
output  [1:0] boardOut_h_V;
output  [1:0] boardOut_i_V;
input   player1;
input   player2;
input   left_r;
input   right_r;
input   start;
output  [3:0] sel_V;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [3:0] selection_V;
reg   [0:0] Xturn;
reg   [1:0] board_a_V;
reg   [1:0] board_b_V;
reg   [1:0] board_c_V;
reg   [1:0] board_d_V;
reg   [1:0] board_e_V;
reg   [1:0] board_f_V;
reg   [1:0] board_g_V;
reg   [1:0] board_h_V;
reg   [1:0] board_i_V;
wire   [0:0] right_read_read_fu_104_p2;
wire   [0:0] left_read_read_fu_110_p2;
wire    StgValue_164_PositionCalculator_fu_225_ap_ready;
wire   [1:0] StgValue_164_PositionCalculator_fu_225_board_a_V_o;
wire    StgValue_164_PositionCalculator_fu_225_board_a_V_o_ap_vld;
wire   [1:0] StgValue_164_PositionCalculator_fu_225_board_b_V_o;
wire    StgValue_164_PositionCalculator_fu_225_board_b_V_o_ap_vld;
wire   [1:0] StgValue_164_PositionCalculator_fu_225_board_c_V_o;
wire    StgValue_164_PositionCalculator_fu_225_board_c_V_o_ap_vld;
wire   [1:0] StgValue_164_PositionCalculator_fu_225_board_d_V_o;
wire    StgValue_164_PositionCalculator_fu_225_board_d_V_o_ap_vld;
wire   [1:0] StgValue_164_PositionCalculator_fu_225_board_e_V_o;
wire    StgValue_164_PositionCalculator_fu_225_board_e_V_o_ap_vld;
wire   [1:0] StgValue_164_PositionCalculator_fu_225_board_f_V_o;
wire    StgValue_164_PositionCalculator_fu_225_board_f_V_o_ap_vld;
wire   [1:0] StgValue_164_PositionCalculator_fu_225_board_g_V_o;
wire    StgValue_164_PositionCalculator_fu_225_board_g_V_o_ap_vld;
wire   [1:0] StgValue_164_PositionCalculator_fu_225_board_h_V_o;
wire    StgValue_164_PositionCalculator_fu_225_board_h_V_o_ap_vld;
wire   [1:0] StgValue_164_PositionCalculator_fu_225_board_i_V_o;
wire    StgValue_164_PositionCalculator_fu_225_board_i_V_o_ap_vld;
wire   [0:0] StgValue_164_PositionCalculator_fu_225_Xturn_o;
wire    StgValue_164_PositionCalculator_fu_225_Xturn_o_ap_vld;
reg   [0:0] fin_reg_212;
wire    ap_CS_fsm_state3;
wire   [0:0] or_cond7_i_fu_907_p2;
wire   [0:0] or_cond5_i_fu_895_p2;
wire   [0:0] or_cond3_i_fu_883_p2;
wire   [0:0] or_cond1_i_fu_871_p2;
wire   [0:0] p_i1_fu_859_p2;
wire   [0:0] p_i_fu_691_p2;
wire    ap_CS_fsm_state4;
wire   [0:0] start_read_read_fu_98_p2;
wire   [3:0] tmp_1_fu_381_p3;
wire    ap_CS_fsm_state2;
wire   [3:0] p_tmp_2_fu_407_p3;
wire    ap_CS_fsm_state5;
wire   [0:0] tmp_s_fu_369_p2;
wire   [3:0] selection_V_load_op_fu_375_p2;
wire   [3:0] tmp_2_fu_395_p2;
wire   [0:0] tmp_3_fu_401_p2;
wire   [0:0] phitmp18_i_fu_427_p2;
wire   [0:0] phitmp34_i_fu_433_p2;
wire   [0:0] tmp_fu_439_p2;
wire   [0:0] phitmp_i_fu_421_p2;
wire   [0:0] phitmp32_i_fu_457_p2;
wire   [0:0] phitmp33_i_fu_463_p2;
wire   [0:0] tmp1_fu_469_p2;
wire   [0:0] phitmp19_i_fu_451_p2;
wire   [0:0] phitmp30_i_fu_487_p2;
wire   [0:0] phitmp31_i_fu_493_p2;
wire   [0:0] tmp2_fu_499_p2;
wire   [0:0] phitmp20_i_fu_481_p2;
wire   [0:0] phitmp28_i_fu_517_p2;
wire   [0:0] phitmp29_i_fu_523_p2;
wire   [0:0] tmp3_fu_529_p2;
wire   [0:0] phitmp21_i_fu_511_p2;
wire   [0:0] phitmp24_i_fu_565_p2;
wire   [0:0] phitmp25_i_fu_571_p2;
wire   [0:0] tmp4_fu_577_p2;
wire   [0:0] phitmp23_i_fu_559_p2;
wire   [0:0] or_cond12_i_fu_445_p2;
wire   [0:0] or_cond14_i_fu_475_p2;
wire   [0:0] sel_tmp1_i_fu_589_p2;
wire   [0:0] sel_tmp6_demorgan_i_fu_601_p2;
wire   [0:0] or_cond16_i_fu_505_p2;
wire   [0:0] sel_tmp6_i_fu_607_p2;
wire   [0:0] sel_tmp13_demorgan_i_fu_619_p2;
wire   [0:0] or_cond18_i_fu_535_p2;
wire   [0:0] sel_tmp13_i_fu_625_p2;
wire   [0:0] sel_tmp22_demorgan_i_fu_637_p2;
wire   [0:0] phitmp22_i_fu_541_p2;
wire   [0:0] phitmp26_i_fu_547_p2;
wire   [0:0] phitmp27_i_fu_553_p2;
wire   [0:0] sel_tmp22_i_fu_643_p2;
wire   [0:0] tmp6_fu_655_p2;
wire   [0:0] tmp5_fu_649_p2;
wire   [0:0] or_cond22_i_fu_583_p2;
wire   [0:0] sel_tmp2_i_fu_595_p2;
wire   [0:0] tmp7_fu_667_p2;
wire   [0:0] sel_tmp14_i_fu_631_p2;
wire   [0:0] sel_tmp23_i_fu_661_p2;
wire   [0:0] tmp9_fu_679_p2;
wire   [0:0] sel_tmp7_i_fu_613_p2;
wire   [0:0] tmp10_fu_685_p2;
wire   [0:0] tmp8_fu_673_p2;
wire   [0:0] tmp11_fu_697_p2;
wire   [0:0] tmp12_fu_709_p2;
wire   [0:0] tmp13_fu_721_p2;
wire   [0:0] tmp14_fu_733_p2;
wire   [0:0] tmp15_fu_745_p2;
wire   [0:0] or_cond1_i7_fu_703_p2;
wire   [0:0] or_cond3_i9_fu_715_p2;
wire   [0:0] sel_tmp1_i1_fu_757_p2;
wire   [0:0] sel_tmp6_demorgan_i1_fu_769_p2;
wire   [0:0] or_cond5_i1_fu_727_p2;
wire   [0:0] sel_tmp6_i1_fu_775_p2;
wire   [0:0] sel_tmp13_demorgan_i_1_fu_787_p2;
wire   [0:0] or_cond7_i1_fu_739_p2;
wire   [0:0] sel_tmp13_i1_fu_793_p2;
wire   [0:0] sel_tmp22_demorgan_i_1_fu_805_p2;
wire   [0:0] sel_tmp22_i1_fu_811_p2;
wire   [0:0] tmp17_fu_823_p2;
wire   [0:0] tmp16_fu_817_p2;
wire   [0:0] or_cond11_i_fu_751_p2;
wire   [0:0] sel_tmp2_i1_fu_763_p2;
wire   [0:0] tmp18_fu_835_p2;
wire   [0:0] sel_tmp14_i1_fu_799_p2;
wire   [0:0] sel_tmp23_i1_fu_829_p2;
wire   [0:0] tmp20_fu_847_p2;
wire   [0:0] sel_tmp7_i1_fu_781_p2;
wire   [0:0] tmp21_fu_853_p2;
wire   [0:0] tmp19_fu_841_p2;
wire   [0:0] tmp22_fu_865_p2;
wire   [0:0] tmp23_fu_877_p2;
wire   [0:0] tmp24_fu_889_p2;
wire   [0:0] tmp25_fu_901_p2;
wire   [0:0] not_s_fu_917_p2;
reg   [4:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 selection_V = 4'd0;
#0 Xturn = 1'd1;
#0 board_a_V = 2'd0;
#0 board_b_V = 2'd0;
#0 board_c_V = 2'd0;
#0 board_d_V = 2'd0;
#0 board_e_V = 2'd0;
#0 board_f_V = 2'd0;
#0 board_g_V = 2'd0;
#0 board_h_V = 2'd0;
#0 board_i_V = 2'd0;
end

PositionCalculator StgValue_164_PositionCalculator_fu_225(
    .ap_ready(StgValue_164_PositionCalculator_fu_225_ap_ready),
    .player1(player1),
    .player2(player2),
    .selection_V(selection_V),
    .board_a_V_i(board_a_V),
    .board_a_V_o(StgValue_164_PositionCalculator_fu_225_board_a_V_o),
    .board_a_V_o_ap_vld(StgValue_164_PositionCalculator_fu_225_board_a_V_o_ap_vld),
    .board_b_V_i(board_b_V),
    .board_b_V_o(StgValue_164_PositionCalculator_fu_225_board_b_V_o),
    .board_b_V_o_ap_vld(StgValue_164_PositionCalculator_fu_225_board_b_V_o_ap_vld),
    .board_c_V_i(board_c_V),
    .board_c_V_o(StgValue_164_PositionCalculator_fu_225_board_c_V_o),
    .board_c_V_o_ap_vld(StgValue_164_PositionCalculator_fu_225_board_c_V_o_ap_vld),
    .board_d_V_i(board_d_V),
    .board_d_V_o(StgValue_164_PositionCalculator_fu_225_board_d_V_o),
    .board_d_V_o_ap_vld(StgValue_164_PositionCalculator_fu_225_board_d_V_o_ap_vld),
    .board_e_V_i(board_e_V),
    .board_e_V_o(StgValue_164_PositionCalculator_fu_225_board_e_V_o),
    .board_e_V_o_ap_vld(StgValue_164_PositionCalculator_fu_225_board_e_V_o_ap_vld),
    .board_f_V_i(board_f_V),
    .board_f_V_o(StgValue_164_PositionCalculator_fu_225_board_f_V_o),
    .board_f_V_o_ap_vld(StgValue_164_PositionCalculator_fu_225_board_f_V_o_ap_vld),
    .board_g_V_i(board_g_V),
    .board_g_V_o(StgValue_164_PositionCalculator_fu_225_board_g_V_o),
    .board_g_V_o_ap_vld(StgValue_164_PositionCalculator_fu_225_board_g_V_o_ap_vld),
    .board_h_V_i(board_h_V),
    .board_h_V_o(StgValue_164_PositionCalculator_fu_225_board_h_V_o),
    .board_h_V_o_ap_vld(StgValue_164_PositionCalculator_fu_225_board_h_V_o_ap_vld),
    .board_i_V_i(board_i_V),
    .board_i_V_o(StgValue_164_PositionCalculator_fu_225_board_i_V_o),
    .board_i_V_o_ap_vld(StgValue_164_PositionCalculator_fu_225_board_i_V_o_ap_vld),
    .Xturn_i(Xturn),
    .Xturn_o(StgValue_164_PositionCalculator_fu_225_Xturn_o),
    .Xturn_o_ap_vld(StgValue_164_PositionCalculator_fu_225_Xturn_o_ap_vld)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((start_read_read_fu_98_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        Xturn <= 1'd1;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'b1 == StgValue_164_PositionCalculator_fu_225_Xturn_o_ap_vld))) begin
        Xturn <= StgValue_164_PositionCalculator_fu_225_Xturn_o;
    end
end

always @ (posedge ap_clk) begin
    if (((start_read_read_fu_98_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        board_a_V <= 2'd0;
    end else if (((1'b1 == StgValue_164_PositionCalculator_fu_225_board_a_V_o_ap_vld) & (1'b1 == ap_CS_fsm_state4))) begin
        board_a_V <= StgValue_164_PositionCalculator_fu_225_board_a_V_o;
    end
end

always @ (posedge ap_clk) begin
    if (((start_read_read_fu_98_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        board_b_V <= 2'd0;
    end else if (((1'b1 == StgValue_164_PositionCalculator_fu_225_board_b_V_o_ap_vld) & (1'b1 == ap_CS_fsm_state4))) begin
        board_b_V <= StgValue_164_PositionCalculator_fu_225_board_b_V_o;
    end
end

always @ (posedge ap_clk) begin
    if (((start_read_read_fu_98_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        board_c_V <= 2'd0;
    end else if (((1'b1 == StgValue_164_PositionCalculator_fu_225_board_c_V_o_ap_vld) & (1'b1 == ap_CS_fsm_state4))) begin
        board_c_V <= StgValue_164_PositionCalculator_fu_225_board_c_V_o;
    end
end

always @ (posedge ap_clk) begin
    if (((start_read_read_fu_98_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        board_d_V <= 2'd0;
    end else if (((1'b1 == StgValue_164_PositionCalculator_fu_225_board_d_V_o_ap_vld) & (1'b1 == ap_CS_fsm_state4))) begin
        board_d_V <= StgValue_164_PositionCalculator_fu_225_board_d_V_o;
    end
end

always @ (posedge ap_clk) begin
    if (((start_read_read_fu_98_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        board_e_V <= 2'd0;
    end else if (((1'b1 == StgValue_164_PositionCalculator_fu_225_board_e_V_o_ap_vld) & (1'b1 == ap_CS_fsm_state4))) begin
        board_e_V <= StgValue_164_PositionCalculator_fu_225_board_e_V_o;
    end
end

always @ (posedge ap_clk) begin
    if (((start_read_read_fu_98_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        board_f_V <= 2'd0;
    end else if (((1'b1 == StgValue_164_PositionCalculator_fu_225_board_f_V_o_ap_vld) & (1'b1 == ap_CS_fsm_state4))) begin
        board_f_V <= StgValue_164_PositionCalculator_fu_225_board_f_V_o;
    end
end

always @ (posedge ap_clk) begin
    if (((start_read_read_fu_98_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        board_g_V <= 2'd0;
    end else if (((1'b1 == StgValue_164_PositionCalculator_fu_225_board_g_V_o_ap_vld) & (1'b1 == ap_CS_fsm_state4))) begin
        board_g_V <= StgValue_164_PositionCalculator_fu_225_board_g_V_o;
    end
end

always @ (posedge ap_clk) begin
    if (((start_read_read_fu_98_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        board_h_V <= 2'd0;
    end else if (((1'b1 == StgValue_164_PositionCalculator_fu_225_board_h_V_o_ap_vld) & (1'b1 == ap_CS_fsm_state4))) begin
        board_h_V <= StgValue_164_PositionCalculator_fu_225_board_h_V_o;
    end
end

always @ (posedge ap_clk) begin
    if (((start_read_read_fu_98_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        board_i_V <= 2'd0;
    end else if (((1'b1 == StgValue_164_PositionCalculator_fu_225_board_i_V_o_ap_vld) & (1'b1 == ap_CS_fsm_state4))) begin
        board_i_V <= StgValue_164_PositionCalculator_fu_225_board_i_V_o;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        fin_reg_212 <= 1'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & ((p_i_fu_691_p2 == 1'd1) | ((p_i1_fu_859_p2 == 1'd1) | ((or_cond1_i_fu_871_p2 == 1'd1) | ((or_cond3_i_fu_883_p2 == 1'd1) | ((or_cond5_i_fu_895_p2 == 1'd1) | (or_cond7_i_fu_907_p2 == 1'd1)))))))) begin
        fin_reg_212 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((right_read_read_fu_104_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        selection_V <= p_tmp_2_fu_407_p3;
    end else if (((left_read_read_fu_110_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        selection_V <= tmp_1_fu_381_p3;
    end else if (((start_read_read_fu_98_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        selection_V <= 4'd0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & ((p_i_fu_691_p2 == 1'd1) | ((p_i1_fu_859_p2 == 1'd1) | ((or_cond1_i_fu_871_p2 == 1'd1) | ((or_cond3_i_fu_883_p2 == 1'd1) | ((or_cond5_i_fu_895_p2 == 1'd1) | (or_cond7_i_fu_907_p2 == 1'd1)))))))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign boardOut_a_V = board_a_V;

assign boardOut_b_V = board_b_V;

assign boardOut_c_V = board_c_V;

assign boardOut_d_V = board_d_V;

assign boardOut_e_V = board_e_V;

assign boardOut_f_V = board_f_V;

assign boardOut_g_V = board_g_V;

assign boardOut_h_V = board_h_V;

assign boardOut_i_V = board_i_V;

assign left_read_read_fu_110_p2 = left_r;

assign not_s_fu_917_p2 = (1'd1 ^ Xturn);

assign or_cond11_i_fu_751_p2 = (tmp15_fu_745_p2 & phitmp33_i_fu_463_p2);

assign or_cond12_i_fu_445_p2 = (tmp_fu_439_p2 & phitmp_i_fu_421_p2);

assign or_cond14_i_fu_475_p2 = (tmp1_fu_469_p2 & phitmp19_i_fu_451_p2);

assign or_cond16_i_fu_505_p2 = (tmp2_fu_499_p2 & phitmp20_i_fu_481_p2);

assign or_cond18_i_fu_535_p2 = (tmp3_fu_529_p2 & phitmp21_i_fu_511_p2);

assign or_cond1_i7_fu_703_p2 = (tmp11_fu_697_p2 & phitmp_i_fu_421_p2);

assign or_cond1_i_fu_871_p2 = (tmp22_fu_865_p2 & phitmp_i_fu_421_p2);

assign or_cond22_i_fu_583_p2 = (tmp4_fu_577_p2 & phitmp23_i_fu_559_p2);

assign or_cond3_i9_fu_715_p2 = (tmp12_fu_709_p2 & phitmp19_i_fu_451_p2);

assign or_cond3_i_fu_883_p2 = (tmp23_fu_877_p2 & phitmp19_i_fu_451_p2);

assign or_cond5_i1_fu_727_p2 = (tmp13_fu_721_p2 & phitmp18_i_fu_427_p2);

assign or_cond5_i_fu_895_p2 = (tmp24_fu_889_p2 & phitmp34_i_fu_433_p2);

assign or_cond7_i1_fu_739_p2 = (tmp14_fu_733_p2 & phitmp32_i_fu_457_p2);

assign or_cond7_i_fu_907_p2 = (tmp25_fu_901_p2 & phitmp33_i_fu_463_p2);

assign p_i1_fu_859_p2 = (tmp21_fu_853_p2 | tmp19_fu_841_p2);

assign p_i_fu_691_p2 = (tmp8_fu_673_p2 | tmp10_fu_685_p2);

assign p_tmp_2_fu_407_p3 = ((tmp_3_fu_401_p2[0:0] === 1'b1) ? 4'd0 : tmp_2_fu_395_p2);

assign phitmp18_i_fu_427_p2 = ((board_b_V == 2'd1) ? 1'b1 : 1'b0);

assign phitmp19_i_fu_451_p2 = ((board_a_V == 2'd2) ? 1'b1 : 1'b0);

assign phitmp20_i_fu_481_p2 = ((board_d_V == 2'd1) ? 1'b1 : 1'b0);

assign phitmp21_i_fu_511_p2 = ((board_d_V == 2'd2) ? 1'b1 : 1'b0);

assign phitmp22_i_fu_541_p2 = ((board_g_V == 2'd1) ? 1'b1 : 1'b0);

assign phitmp23_i_fu_559_p2 = ((board_g_V == 2'd2) ? 1'b1 : 1'b0);

assign phitmp24_i_fu_565_p2 = ((board_h_V == 2'd2) ? 1'b1 : 1'b0);

assign phitmp25_i_fu_571_p2 = ((board_i_V == 2'd2) ? 1'b1 : 1'b0);

assign phitmp26_i_fu_547_p2 = ((board_h_V == 2'd1) ? 1'b1 : 1'b0);

assign phitmp27_i_fu_553_p2 = ((board_i_V == 2'd1) ? 1'b1 : 1'b0);

assign phitmp28_i_fu_517_p2 = ((board_e_V == 2'd2) ? 1'b1 : 1'b0);

assign phitmp29_i_fu_523_p2 = ((board_f_V == 2'd2) ? 1'b1 : 1'b0);

assign phitmp30_i_fu_487_p2 = ((board_e_V == 2'd1) ? 1'b1 : 1'b0);

assign phitmp31_i_fu_493_p2 = ((board_f_V == 2'd1) ? 1'b1 : 1'b0);

assign phitmp32_i_fu_457_p2 = ((board_b_V == 2'd2) ? 1'b1 : 1'b0);

assign phitmp33_i_fu_463_p2 = ((board_c_V == 2'd2) ? 1'b1 : 1'b0);

assign phitmp34_i_fu_433_p2 = ((board_c_V == 2'd1) ? 1'b1 : 1'b0);

assign phitmp_i_fu_421_p2 = ((board_a_V == 2'd1) ? 1'b1 : 1'b0);

assign player1_win = (not_s_fu_917_p2 & fin_reg_212);

assign player2_win = (fin_reg_212 & Xturn);

assign right_read_read_fu_104_p2 = right_r;

assign sel_V = selection_V;

assign sel_tmp13_demorgan_i_1_fu_787_p2 = (sel_tmp6_demorgan_i1_fu_769_p2 | or_cond5_i1_fu_727_p2);

assign sel_tmp13_demorgan_i_fu_619_p2 = (sel_tmp6_demorgan_i_fu_601_p2 | or_cond16_i_fu_505_p2);

assign sel_tmp13_i1_fu_793_p2 = (sel_tmp13_demorgan_i_1_fu_787_p2 ^ 1'd1);

assign sel_tmp13_i_fu_625_p2 = (sel_tmp13_demorgan_i_fu_619_p2 ^ 1'd1);

assign sel_tmp14_i1_fu_799_p2 = (sel_tmp13_i1_fu_793_p2 & or_cond7_i1_fu_739_p2);

assign sel_tmp14_i_fu_631_p2 = (sel_tmp13_i_fu_625_p2 & or_cond18_i_fu_535_p2);

assign sel_tmp1_i1_fu_757_p2 = (or_cond1_i7_fu_703_p2 ^ 1'd1);

assign sel_tmp1_i_fu_589_p2 = (or_cond12_i_fu_445_p2 ^ 1'd1);

assign sel_tmp22_demorgan_i_1_fu_805_p2 = (sel_tmp13_demorgan_i_1_fu_787_p2 | or_cond7_i1_fu_739_p2);

assign sel_tmp22_demorgan_i_fu_637_p2 = (sel_tmp13_demorgan_i_fu_619_p2 | or_cond18_i_fu_535_p2);

assign sel_tmp22_i1_fu_811_p2 = (sel_tmp22_demorgan_i_1_fu_805_p2 ^ 1'd1);

assign sel_tmp22_i_fu_643_p2 = (sel_tmp22_demorgan_i_fu_637_p2 ^ 1'd1);

assign sel_tmp23_i1_fu_829_p2 = (tmp17_fu_823_p2 & tmp16_fu_817_p2);

assign sel_tmp23_i_fu_661_p2 = (tmp6_fu_655_p2 & tmp5_fu_649_p2);

assign sel_tmp2_i1_fu_763_p2 = (sel_tmp1_i1_fu_757_p2 & or_cond3_i9_fu_715_p2);

assign sel_tmp2_i_fu_595_p2 = (sel_tmp1_i_fu_589_p2 & or_cond14_i_fu_475_p2);

assign sel_tmp6_demorgan_i1_fu_769_p2 = (or_cond3_i9_fu_715_p2 | or_cond1_i7_fu_703_p2);

assign sel_tmp6_demorgan_i_fu_601_p2 = (or_cond14_i_fu_475_p2 | or_cond12_i_fu_445_p2);

assign sel_tmp6_i1_fu_775_p2 = (sel_tmp6_demorgan_i1_fu_769_p2 ^ 1'd1);

assign sel_tmp6_i_fu_607_p2 = (sel_tmp6_demorgan_i_fu_601_p2 ^ 1'd1);

assign sel_tmp7_i1_fu_781_p2 = (sel_tmp6_i1_fu_775_p2 & or_cond5_i1_fu_727_p2);

assign sel_tmp7_i_fu_613_p2 = (sel_tmp6_i_fu_607_p2 & or_cond16_i_fu_505_p2);

assign selection_V_load_op_fu_375_p2 = ($signed(selection_V) + $signed(4'd15));

assign start_read_read_fu_98_p2 = start;

assign tmp10_fu_685_p2 = (tmp9_fu_679_p2 | sel_tmp7_i_fu_613_p2);

assign tmp11_fu_697_p2 = (phitmp22_i_fu_541_p2 & phitmp20_i_fu_481_p2);

assign tmp12_fu_709_p2 = (phitmp23_i_fu_559_p2 & phitmp21_i_fu_511_p2);

assign tmp13_fu_721_p2 = (phitmp30_i_fu_487_p2 & phitmp26_i_fu_547_p2);

assign tmp14_fu_733_p2 = (phitmp28_i_fu_517_p2 & phitmp24_i_fu_565_p2);

assign tmp15_fu_745_p2 = (phitmp29_i_fu_523_p2 & phitmp25_i_fu_571_p2);

assign tmp16_fu_817_p2 = (phitmp34_i_fu_433_p2 & phitmp31_i_fu_493_p2);

assign tmp17_fu_823_p2 = (sel_tmp22_i1_fu_811_p2 & phitmp27_i_fu_553_p2);

assign tmp18_fu_835_p2 = (sel_tmp2_i1_fu_763_p2 | or_cond11_i_fu_751_p2);

assign tmp19_fu_841_p2 = (tmp18_fu_835_p2 | or_cond1_i7_fu_703_p2);

assign tmp1_fu_469_p2 = (phitmp33_i_fu_463_p2 & phitmp32_i_fu_457_p2);

assign tmp20_fu_847_p2 = (sel_tmp23_i1_fu_829_p2 | sel_tmp14_i1_fu_799_p2);

assign tmp21_fu_853_p2 = (tmp20_fu_847_p2 | sel_tmp7_i1_fu_781_p2);

assign tmp22_fu_865_p2 = (phitmp30_i_fu_487_p2 & phitmp27_i_fu_553_p2);

assign tmp23_fu_877_p2 = (phitmp28_i_fu_517_p2 & phitmp25_i_fu_571_p2);

assign tmp24_fu_889_p2 = (phitmp30_i_fu_487_p2 & phitmp22_i_fu_541_p2);

assign tmp25_fu_901_p2 = (phitmp28_i_fu_517_p2 & phitmp23_i_fu_559_p2);

assign tmp2_fu_499_p2 = (phitmp31_i_fu_493_p2 & phitmp30_i_fu_487_p2);

assign tmp3_fu_529_p2 = (phitmp29_i_fu_523_p2 & phitmp28_i_fu_517_p2);

assign tmp4_fu_577_p2 = (phitmp25_i_fu_571_p2 & phitmp24_i_fu_565_p2);

assign tmp5_fu_649_p2 = (phitmp26_i_fu_547_p2 & phitmp22_i_fu_541_p2);

assign tmp6_fu_655_p2 = (sel_tmp22_i_fu_643_p2 & phitmp27_i_fu_553_p2);

assign tmp7_fu_667_p2 = (sel_tmp2_i_fu_595_p2 | or_cond22_i_fu_583_p2);

assign tmp8_fu_673_p2 = (tmp7_fu_667_p2 | or_cond12_i_fu_445_p2);

assign tmp9_fu_679_p2 = (sel_tmp23_i_fu_661_p2 | sel_tmp14_i_fu_631_p2);

assign tmp_1_fu_381_p3 = ((tmp_s_fu_369_p2[0:0] === 1'b1) ? 4'd8 : selection_V_load_op_fu_375_p2);

assign tmp_2_fu_395_p2 = (selection_V + 4'd1);

assign tmp_3_fu_401_p2 = ((tmp_2_fu_395_p2 > 4'd8) ? 1'b1 : 1'b0);

assign tmp_fu_439_p2 = (phitmp34_i_fu_433_p2 & phitmp18_i_fu_427_p2);

assign tmp_s_fu_369_p2 = ((selection_V == 4'd0) ? 1'b1 : 1'b0);

endmodule //TicTacToe
