-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Interface2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_V : IN STD_LOGIC_VECTOR (9 downto 0);
    y_V : IN STD_LOGIC_VECTOR (9 downto 0);
    XY_Red_V : OUT STD_LOGIC_VECTOR (7 downto 0);
    XY_Green_V : OUT STD_LOGIC_VECTOR (7 downto 0);
    XY_Blue_V : OUT STD_LOGIC_VECTOR (7 downto 0);
    center_line_V : IN STD_LOGIC_VECTOR (9 downto 0);
    right_r : IN STD_LOGIC );
end;


architecture behav of Interface2 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "Interface2,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=40.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.748500,HLS_SYN_LAT=4,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=38,HLS_SYN_LUT=197,HLS_VERSION=2018_3}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv10_27 : STD_LOGIC_VECTOR (9 downto 0) := "0000100111";
    constant ap_const_lv10_140 : STD_LOGIC_VECTOR (9 downto 0) := "0101000000";
    constant ap_const_lv10_280 : STD_LOGIC_VECTOR (9 downto 0) := "1010000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal tmp_fu_103_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_191 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge247_i_fu_121_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge247_i_reg_198 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_127_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_202 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_fu_97_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not248_i_reg_206 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge250_i_fu_137_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge250_i_reg_211 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge252_i_fu_143_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge252_i_reg_215 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_2_reg_219 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal or_cond_fu_156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_223 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_227 : STD_LOGIC_VECTOR (0 downto 0);
    signal XY_Red_V_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal brmerge_i_fu_109_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal XY_Blue_V_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal XY_Green_V_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal brmerge_i_fu_109_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal right_not_i_fu_115_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal right_not_i_fu_115_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal right_not249_i_fu_132_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal right_not249_i_fu_132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge252_i_fu_143_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_147_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_151_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);


begin




    XY_Blue_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                XY_Blue_V_preg <= ap_const_lv8_0;
            else
                if (((brmerge247_i_reg_198 = ap_const_lv1_0) and (tmp_reg_191 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    XY_Blue_V_preg <= ap_const_lv8_0;
                elsif ((((brmerge252_i_reg_215 = ap_const_lv1_0) and (tmp_1_reg_202 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((brmerge250_i_reg_211 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((brmerge_i_fu_109_p2 = ap_const_lv1_0) and (tmp_fu_103_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
                    XY_Blue_V_preg <= ap_const_lv8_FF;
                end if; 
            end if;
        end if;
    end process;


    XY_Green_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                XY_Green_V_preg <= ap_const_lv8_0;
            else
                if ((((brmerge252_i_reg_215 = ap_const_lv1_0) and (tmp_1_reg_202 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((brmerge247_i_reg_198 = ap_const_lv1_0) and (tmp_reg_191 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
                    XY_Green_V_preg <= ap_const_lv8_0;
                elsif ((((brmerge250_i_reg_211 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((brmerge_i_fu_109_p2 = ap_const_lv1_0) and (tmp_fu_103_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
                    XY_Green_V_preg <= ap_const_lv8_FF;
                end if; 
            end if;
        end if;
    end process;


    XY_Red_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                XY_Red_V_preg <= ap_const_lv8_0;
            else
                if ((((brmerge252_i_reg_215 = ap_const_lv1_0) and (tmp_1_reg_202 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((brmerge247_i_reg_198 = ap_const_lv1_0) and (tmp_reg_191 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
                    XY_Red_V_preg <= ap_const_lv8_0;
                elsif ((((brmerge250_i_reg_211 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((brmerge_i_fu_109_p2 = ap_const_lv1_0) and (tmp_fu_103_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
                    XY_Red_V_preg <= ap_const_lv8_FF;
                end if; 
            end if;
        end if;
    end process;


    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_103_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                brmerge247_i_reg_198 <= brmerge247_i_fu_121_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_1_fu_127_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                brmerge250_i_reg_211 <= brmerge250_i_fu_137_p2;
                p_not248_i_reg_206 <= grp_fu_97_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                brmerge252_i_reg_215 <= brmerge252_i_fu_143_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_fu_97_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                or_cond_reg_223 <= or_cond_fu_156_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                tmp_1_reg_202 <= tmp_1_fu_127_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                tmp_2_reg_219 <= grp_fu_97_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_fu_156_p2 = ap_const_lv1_0) and (grp_fu_97_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                tmp_5_reg_227 <= tmp_5_fu_162_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                tmp_reg_191 <= tmp_fu_103_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, tmp_1_fu_127_p2, ap_CS_fsm_state2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((tmp_1_fu_127_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;

    XY_Blue_V_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_fu_103_p2, tmp_reg_191, brmerge247_i_reg_198, tmp_1_reg_202, ap_CS_fsm_state2, brmerge250_i_reg_211, brmerge252_i_reg_215, ap_CS_fsm_state3, tmp_2_reg_219, ap_CS_fsm_state4, or_cond_reg_223, tmp_5_reg_227, brmerge_i_fu_109_p2, ap_CS_fsm_state5, XY_Blue_V_preg)
    begin
        if ((((brmerge247_i_reg_198 = ap_const_lv1_0) and (tmp_reg_191 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((or_cond_reg_223 = ap_const_lv1_1) and (tmp_2_reg_219 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((or_cond_reg_223 = ap_const_lv1_0) and (tmp_5_reg_227 = ap_const_lv1_1) and (tmp_2_reg_219 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            XY_Blue_V <= ap_const_lv8_0;
        elsif ((((brmerge252_i_reg_215 = ap_const_lv1_0) and (tmp_1_reg_202 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((brmerge250_i_reg_211 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((brmerge_i_fu_109_p2 = ap_const_lv1_0) and (tmp_fu_103_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            XY_Blue_V <= ap_const_lv8_FF;
        else 
            XY_Blue_V <= XY_Blue_V_preg;
        end if; 
    end process;


    XY_Green_V_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_fu_103_p2, tmp_reg_191, brmerge247_i_reg_198, tmp_1_reg_202, ap_CS_fsm_state2, brmerge250_i_reg_211, brmerge252_i_reg_215, ap_CS_fsm_state3, tmp_2_reg_219, ap_CS_fsm_state4, or_cond_reg_223, tmp_5_reg_227, brmerge_i_fu_109_p2, ap_CS_fsm_state5, XY_Green_V_preg)
    begin
        if ((((brmerge252_i_reg_215 = ap_const_lv1_0) and (tmp_1_reg_202 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((brmerge247_i_reg_198 = ap_const_lv1_0) and (tmp_reg_191 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((or_cond_reg_223 = ap_const_lv1_1) and (tmp_2_reg_219 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            XY_Green_V <= ap_const_lv8_0;
        elsif ((((brmerge250_i_reg_211 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((brmerge_i_fu_109_p2 = ap_const_lv1_0) and (tmp_fu_103_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((or_cond_reg_223 = ap_const_lv1_0) and (tmp_5_reg_227 = ap_const_lv1_1) and (tmp_2_reg_219 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            XY_Green_V <= ap_const_lv8_FF;
        else 
            XY_Green_V <= XY_Green_V_preg;
        end if; 
    end process;


    XY_Red_V_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_fu_103_p2, tmp_reg_191, brmerge247_i_reg_198, tmp_1_reg_202, ap_CS_fsm_state2, brmerge250_i_reg_211, brmerge252_i_reg_215, ap_CS_fsm_state3, tmp_2_reg_219, ap_CS_fsm_state4, or_cond_reg_223, tmp_5_reg_227, XY_Red_V_preg, brmerge_i_fu_109_p2, ap_CS_fsm_state5)
    begin
        if ((((brmerge252_i_reg_215 = ap_const_lv1_0) and (tmp_1_reg_202 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((brmerge247_i_reg_198 = ap_const_lv1_0) and (tmp_reg_191 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((or_cond_reg_223 = ap_const_lv1_0) and (tmp_5_reg_227 = ap_const_lv1_1) and (tmp_2_reg_219 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            XY_Red_V <= ap_const_lv8_0;
        elsif ((((brmerge250_i_reg_211 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((brmerge_i_fu_109_p2 = ap_const_lv1_0) and (tmp_fu_103_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((or_cond_reg_223 = ap_const_lv1_1) and (tmp_2_reg_219 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            XY_Red_V <= ap_const_lv8_FF;
        else 
            XY_Red_V <= XY_Red_V_preg;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);

    ap_done_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge247_i_fu_121_p2 <= (right_not_i_fu_115_p2 or grp_fu_97_p2);
    brmerge250_i_fu_137_p2 <= (right_not249_i_fu_132_p2 or grp_fu_97_p2);
    brmerge252_i_fu_143_p1 <= (0=>right_r, others=>'-');
    brmerge252_i_fu_143_p2 <= (p_not248_i_reg_206 or brmerge252_i_fu_143_p1);
    brmerge_i_fu_109_p1 <= (0=>right_r, others=>'-');
    brmerge_i_fu_109_p2 <= (grp_fu_97_p2 or brmerge_i_fu_109_p1);
    grp_fu_97_p2 <= "1" when (unsigned(y_V) > unsigned(ap_const_lv10_27)) else "0";
    or_cond_fu_156_p2 <= (tmp_4_fu_151_p2 and tmp_3_fu_147_p2);
    right_not249_i_fu_132_p0 <= (0=>right_r, others=>'-');
    right_not249_i_fu_132_p2 <= (right_not249_i_fu_132_p0 xor ap_const_lv1_1);
    right_not_i_fu_115_p0 <= (0=>right_r, others=>'-');
    right_not_i_fu_115_p2 <= (right_not_i_fu_115_p0 xor ap_const_lv1_1);
    tmp_1_fu_127_p2 <= "1" when (unsigned(x_V) > unsigned(ap_const_lv10_140)) else "0";
    tmp_3_fu_147_p2 <= "1" when (unsigned(x_V) > unsigned(center_line_V)) else "0";
    tmp_4_fu_151_p2 <= "1" when (unsigned(x_V) < unsigned(ap_const_lv10_280)) else "0";
    tmp_5_fu_162_p2 <= "1" when (unsigned(x_V) < unsigned(center_line_V)) else "0";
    tmp_fu_103_p2 <= "1" when (unsigned(x_V) < unsigned(ap_const_lv10_140)) else "0";
end behav;
