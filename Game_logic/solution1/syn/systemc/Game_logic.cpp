// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Game_logic.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Game_logic::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Game_logic::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<70> Game_logic::ap_ST_fsm_state1 = "1";
const sc_lv<70> Game_logic::ap_ST_fsm_state2 = "10";
const sc_lv<70> Game_logic::ap_ST_fsm_state3 = "100";
const sc_lv<70> Game_logic::ap_ST_fsm_state4 = "1000";
const sc_lv<70> Game_logic::ap_ST_fsm_state5 = "10000";
const sc_lv<70> Game_logic::ap_ST_fsm_state6 = "100000";
const sc_lv<70> Game_logic::ap_ST_fsm_state7 = "1000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state8 = "10000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state9 = "100000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state10 = "1000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state11 = "10000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state12 = "100000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state57 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state58 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state59 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state60 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state61 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state62 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state63 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state64 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state65 = "10000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state66 = "100000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state67 = "1000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state68 = "10000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state69 = "100000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<70> Game_logic::ap_ST_fsm_state70 = "1000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> Game_logic::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Game_logic::ap_const_lv32_1 = "1";
const sc_lv<1> Game_logic::ap_const_lv1_0 = "0";
const sc_lv<32> Game_logic::ap_const_lv32_2 = "10";
const sc_lv<1> Game_logic::ap_const_lv1_1 = "1";
const sc_lv<32> Game_logic::ap_const_lv32_3 = "11";
const sc_lv<32> Game_logic::ap_const_lv32_26 = "100110";
const sc_lv<32> Game_logic::ap_const_lv32_27 = "100111";
const sc_lv<32> Game_logic::ap_const_lv32_35 = "110101";
const sc_lv<32> Game_logic::ap_const_lv32_36 = "110110";
const sc_lv<32> Game_logic::ap_const_lv32_44 = "1000100";
const sc_lv<32> Game_logic::ap_const_lv32_45 = "1000101";
const sc_lv<10> Game_logic::ap_const_lv10_280 = "1010000000";
const sc_lv<10> Game_logic::ap_const_lv10_0 = "0000000000";
const sc_lv<32> Game_logic::ap_const_lv32_D = "1101";
const sc_lv<32> Game_logic::ap_const_lv32_64 = "1100100";
const sc_lv<7> Game_logic::ap_const_lv7_32 = "110010";
const sc_lv<11> Game_logic::ap_const_lv11_64 = "1100100";
const sc_lv<11> Game_logic::ap_const_lv11_D = "1101";
const bool Game_logic::ap_const_boolean_1 = true;

Game_logic::Game_logic(sc_module_name name) : sc_module(name), mVcdFile(0) {
    Game_logic_urem_3bkb_U1 = new Game_logic_urem_3bkb<1,36,32,8,11>("Game_logic_urem_3bkb_U1");
    Game_logic_urem_3bkb_U1->clk(ap_clk);
    Game_logic_urem_3bkb_U1->reset(ap_rst);
    Game_logic_urem_3bkb_U1->start(grp_fu_197_ap_start);
    Game_logic_urem_3bkb_U1->done(grp_fu_197_ap_done);
    Game_logic_urem_3bkb_U1->din0(grp_fu_197_p0);
    Game_logic_urem_3bkb_U1->din1(grp_fu_197_p1);
    Game_logic_urem_3bkb_U1->ce(ap_var_for_const0);
    Game_logic_urem_3bkb_U1->dout(grp_fu_197_p2);
    Game_logic_urem_1cud_U2 = new Game_logic_urem_1cud<1,15,11,8,11>("Game_logic_urem_1cud_U2");
    Game_logic_urem_1cud_U2->clk(ap_clk);
    Game_logic_urem_1cud_U2->reset(ap_rst);
    Game_logic_urem_1cud_U2->start(grp_fu_222_ap_start);
    Game_logic_urem_1cud_U2->done(grp_fu_222_ap_done);
    Game_logic_urem_1cud_U2->din0(grp_fu_337_p3);
    Game_logic_urem_1cud_U2->din1(grp_fu_222_p1);
    Game_logic_urem_1cud_U2->ce(ap_var_for_const0);
    Game_logic_urem_1cud_U2->dout(grp_fu_222_p2);
    Game_logic_urem_1cud_U3 = new Game_logic_urem_1cud<1,15,11,8,11>("Game_logic_urem_1cud_U3");
    Game_logic_urem_1cud_U3->clk(ap_clk);
    Game_logic_urem_1cud_U3->reset(ap_rst);
    Game_logic_urem_1cud_U3->start(grp_fu_243_ap_start);
    Game_logic_urem_1cud_U3->done(grp_fu_243_ap_done);
    Game_logic_urem_1cud_U3->din0(grp_fu_346_p3);
    Game_logic_urem_1cud_U3->din1(grp_fu_243_p1);
    Game_logic_urem_1cud_U3->ce(ap_var_for_const0);
    Game_logic_urem_1cud_U3->dout(grp_fu_243_p2);
    Game_logic_mac_mudEe_U4 = new Game_logic_mac_mudEe<1,1,5,11,8,11>("Game_logic_mac_mudEe_U4");
    Game_logic_mac_mudEe_U4->din0(grp_fu_337_p0);
    Game_logic_mac_mudEe_U4->din1(grp_fu_337_p1);
    Game_logic_mac_mudEe_U4->din2(grp_fu_337_p2);
    Game_logic_mac_mudEe_U4->dout(grp_fu_337_p3);
    Game_logic_mac_mueOg_U5 = new Game_logic_mac_mueOg<1,1,5,8,8,11>("Game_logic_mac_mueOg_U5");
    Game_logic_mac_mueOg_U5->din0(grp_fu_346_p0);
    Game_logic_mac_mueOg_U5->din1(grp_fu_346_p1);
    Game_logic_mac_mueOg_U5->din2(grp_fu_346_p2);
    Game_logic_mac_mueOg_U5->dout(grp_fu_346_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state54);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state55);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state69);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state70);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);

    SC_METHOD(thread_grp_fu_197_ap_start);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_197_p0);
    sensitive << ( tmp_i_i_reg_385 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_197_p1);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_222_ap_start);
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_grp_fu_222_p1);
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_grp_fu_243_ap_start);
    sensitive << ( ap_CS_fsm_state55 );

    SC_METHOD(thread_grp_fu_243_p1);
    sensitive << ( ap_CS_fsm_state55 );

    SC_METHOD(thread_grp_fu_337_p0);
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_grp_fu_337_p1);
    sensitive << ( last_num_assign_1_reg_395 );
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_grp_fu_337_p2);
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_grp_fu_346_p0);
    sensitive << ( ap_CS_fsm_state55 );

    SC_METHOD(thread_grp_fu_346_p1);
    sensitive << ( last_num_assign_2_reg_405 );
    sensitive << ( ap_CS_fsm_state55 );

    SC_METHOD(thread_grp_fu_346_p2);
    sensitive << ( ap_CS_fsm_state55 );

    SC_METHOD(thread_lose);
    sensitive << ( rst_read_read_fu_106_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( lose_preg );

    SC_METHOD(thread_newRound_load_load_fu_172_p1);
    sensitive << ( newRound );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_not_or_cond3_i_fu_325_p2);
    sensitive << ( or_cond3_i_fu_319_p2 );

    SC_METHOD(thread_or_cond3_i_fu_319_p2);
    sensitive << ( tmp_fu_313_p2 );
    sensitive << ( tmp_i1_fu_290_p2 );

    SC_METHOD(thread_rst_read_read_fu_106_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rst );

    SC_METHOD(thread_slow_clk_read_read_fu_82_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( slow_clk );

    SC_METHOD(thread_ssdm_int_V_write_ass_fu_166_p2);
    sensitive << ( time_remaining_in_V );
    sensitive << ( tmp_2_fu_162_p1 );

    SC_METHOD(thread_time_remaining_out_V);
    sensitive << ( slow_clk_read_read_fu_82_p2 );
    sensitive << ( rst_read_read_fu_106_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( time_remaining_out_V_preg );
    sensitive << ( ssdm_int_V_write_ass_fu_166_p2 );

    SC_METHOD(thread_tmp1_i_fu_299_p1);
    sensitive << ( btn2 );
    sensitive << ( ap_CS_fsm_state70 );

    SC_METHOD(thread_tmp1_i_fu_299_p2);
    sensitive << ( btn2_verify );
    sensitive << ( tmp1_i_fu_299_p1 );

    SC_METHOD(thread_tmp2_i_fu_308_p1);
    sensitive << ( btn3 );
    sensitive << ( ap_CS_fsm_state70 );

    SC_METHOD(thread_tmp2_i_fu_308_p2);
    sensitive << ( btn3_verify );
    sensitive << ( tmp2_i_fu_308_p1 );

    SC_METHOD(thread_tmp_1_fu_274_p2);
    sensitive << ( decrement_value );

    SC_METHOD(thread_tmp_2_fu_162_p1);
    sensitive << ( decrement_value );

    SC_METHOD(thread_tmp_2_i_i_cast_fu_252_p1);
    sensitive << ( grp_fu_243_p2 );

    SC_METHOD(thread_tmp_3_i1_fu_262_p2);
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( tmp_6_fu_248_p1 );

    SC_METHOD(thread_tmp_3_i6_fu_231_p2);
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( tmp_5_fu_227_p1 );

    SC_METHOD(thread_tmp_3_i_fu_207_p2);
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( tmp_4_fu_203_p1 );

    SC_METHOD(thread_tmp_4_fu_203_p1);
    sensitive << ( grp_fu_197_p2 );

    SC_METHOD(thread_tmp_5_fu_227_p1);
    sensitive << ( grp_fu_222_p2 );

    SC_METHOD(thread_tmp_6_fu_248_p1);
    sensitive << ( grp_fu_243_p2 );

    SC_METHOD(thread_tmp_fu_313_p2);
    sensitive << ( tmp1_i_fu_299_p2 );
    sensitive << ( tmp2_i_fu_308_p2 );

    SC_METHOD(thread_tmp_i1_fu_290_p1);
    sensitive << ( btn1 );
    sensitive << ( ap_CS_fsm_state70 );

    SC_METHOD(thread_tmp_i1_fu_290_p2);
    sensitive << ( btn1_verify );
    sensitive << ( tmp_i1_fu_290_p1 );

    SC_METHOD(thread_tmp_i_i_fu_180_p1);
    sensitive << ( RandSeed );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_tmp_i_i_fu_180_p2);
    sensitive << ( tmp_i_i_fu_180_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( newRound_load_load_fu_172_p1 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000000000000000000000000000000000000000000000000000000000000000001";
    decrement_value = "00000000000000000000000000000001";
    newRound = "0";
    btn1_verify = "0";
    btn2_verify = "0";
    btn3_verify = "0";
    RandSeed = "00000000000000000000000000000111";
    time_remaining_out_V_preg = "0000000000";
    lose_preg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Game_logic_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, rst, "(port)rst");
    sc_trace(mVcdFile, btn1, "(port)btn1");
    sc_trace(mVcdFile, btn2, "(port)btn2");
    sc_trace(mVcdFile, btn3, "(port)btn3");
    sc_trace(mVcdFile, slow_clk, "(port)slow_clk");
    sc_trace(mVcdFile, lose, "(port)lose");
    sc_trace(mVcdFile, time_remaining_out_V, "(port)time_remaining_out_V");
    sc_trace(mVcdFile, time_remaining_in_V, "(port)time_remaining_in_V");
    sc_trace(mVcdFile, verify1_out, "(port)verify1_out");
    sc_trace(mVcdFile, verify2_out, "(port)verify2_out");
    sc_trace(mVcdFile, verify3_out, "(port)verify3_out");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, decrement_value, "decrement_value");
    sc_trace(mVcdFile, newRound, "newRound");
    sc_trace(mVcdFile, btn1_verify, "btn1_verify");
    sc_trace(mVcdFile, btn2_verify, "btn2_verify");
    sc_trace(mVcdFile, btn3_verify, "btn3_verify");
    sc_trace(mVcdFile, RandSeed, "RandSeed");
    sc_trace(mVcdFile, slow_clk_read_read_fu_82_p2, "slow_clk_read_read_fu_82_p2");
    sc_trace(mVcdFile, rst_read_read_fu_106_p2, "rst_read_read_fu_106_p2");
    sc_trace(mVcdFile, tmp_i_i_fu_180_p2, "tmp_i_i_fu_180_p2");
    sc_trace(mVcdFile, tmp_i_i_reg_385, "tmp_i_i_reg_385");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, newRound_load_load_fu_172_p1, "newRound_load_load_fu_172_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, grp_fu_197_p2, "grp_fu_197_p2");
    sc_trace(mVcdFile, last_num_assign_1_reg_395, "last_num_assign_1_reg_395");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, grp_fu_337_p3, "grp_fu_337_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, grp_fu_222_p2, "grp_fu_222_p2");
    sc_trace(mVcdFile, last_num_assign_2_reg_405, "last_num_assign_2_reg_405");
    sc_trace(mVcdFile, ap_CS_fsm_state54, "ap_CS_fsm_state54");
    sc_trace(mVcdFile, grp_fu_346_p3, "grp_fu_346_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state55, "ap_CS_fsm_state55");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_1_fu_274_p2, "tmp_1_fu_274_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state69, "ap_CS_fsm_state69");
    sc_trace(mVcdFile, not_or_cond3_i_fu_325_p2, "not_or_cond3_i_fu_325_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state70, "ap_CS_fsm_state70");
    sc_trace(mVcdFile, tmp_3_i_fu_207_p2, "tmp_3_i_fu_207_p2");
    sc_trace(mVcdFile, tmp_3_i6_fu_231_p2, "tmp_3_i6_fu_231_p2");
    sc_trace(mVcdFile, tmp_3_i1_fu_262_p2, "tmp_3_i1_fu_262_p2");
    sc_trace(mVcdFile, tmp_2_i_i_cast_fu_252_p1, "tmp_2_i_i_cast_fu_252_p1");
    sc_trace(mVcdFile, time_remaining_out_V_preg, "time_remaining_out_V_preg");
    sc_trace(mVcdFile, ssdm_int_V_write_ass_fu_166_p2, "ssdm_int_V_write_ass_fu_166_p2");
    sc_trace(mVcdFile, lose_preg, "lose_preg");
    sc_trace(mVcdFile, tmp_2_fu_162_p1, "tmp_2_fu_162_p1");
    sc_trace(mVcdFile, tmp_i_i_fu_180_p1, "tmp_i_i_fu_180_p1");
    sc_trace(mVcdFile, grp_fu_197_p0, "grp_fu_197_p0");
    sc_trace(mVcdFile, grp_fu_197_p1, "grp_fu_197_p1");
    sc_trace(mVcdFile, tmp_4_fu_203_p1, "tmp_4_fu_203_p1");
    sc_trace(mVcdFile, grp_fu_222_p1, "grp_fu_222_p1");
    sc_trace(mVcdFile, tmp_5_fu_227_p1, "tmp_5_fu_227_p1");
    sc_trace(mVcdFile, grp_fu_243_p1, "grp_fu_243_p1");
    sc_trace(mVcdFile, grp_fu_243_p2, "grp_fu_243_p2");
    sc_trace(mVcdFile, tmp_6_fu_248_p1, "tmp_6_fu_248_p1");
    sc_trace(mVcdFile, tmp_i1_fu_290_p1, "tmp_i1_fu_290_p1");
    sc_trace(mVcdFile, tmp1_i_fu_299_p1, "tmp1_i_fu_299_p1");
    sc_trace(mVcdFile, tmp2_i_fu_308_p1, "tmp2_i_fu_308_p1");
    sc_trace(mVcdFile, tmp1_i_fu_299_p2, "tmp1_i_fu_299_p2");
    sc_trace(mVcdFile, tmp2_i_fu_308_p2, "tmp2_i_fu_308_p2");
    sc_trace(mVcdFile, tmp_fu_313_p2, "tmp_fu_313_p2");
    sc_trace(mVcdFile, tmp_i1_fu_290_p2, "tmp_i1_fu_290_p2");
    sc_trace(mVcdFile, or_cond3_i_fu_319_p2, "or_cond3_i_fu_319_p2");
    sc_trace(mVcdFile, grp_fu_337_p0, "grp_fu_337_p0");
    sc_trace(mVcdFile, grp_fu_337_p1, "grp_fu_337_p1");
    sc_trace(mVcdFile, grp_fu_337_p2, "grp_fu_337_p2");
    sc_trace(mVcdFile, grp_fu_346_p0, "grp_fu_346_p0");
    sc_trace(mVcdFile, grp_fu_346_p1, "grp_fu_346_p1");
    sc_trace(mVcdFile, grp_fu_346_p2, "grp_fu_346_p2");
    sc_trace(mVcdFile, grp_fu_197_ap_start, "grp_fu_197_ap_start");
    sc_trace(mVcdFile, grp_fu_197_ap_done, "grp_fu_197_ap_done");
    sc_trace(mVcdFile, grp_fu_222_ap_start, "grp_fu_222_ap_start");
    sc_trace(mVcdFile, grp_fu_222_ap_done, "grp_fu_222_ap_done");
    sc_trace(mVcdFile, grp_fu_243_ap_start, "grp_fu_243_ap_start");
    sc_trace(mVcdFile, grp_fu_243_ap_done, "grp_fu_243_ap_done");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("Game_logic.hdltvin.dat");
    mHdltvoutHandle.open("Game_logic.hdltvout.dat");
}

Game_logic::~Game_logic() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete Game_logic_urem_3bkb_U1;
    delete Game_logic_urem_1cud_U2;
    delete Game_logic_urem_1cud_U3;
    delete Game_logic_mac_mudEe_U4;
    delete Game_logic_mac_mueOg_U5;
}

void Game_logic::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void Game_logic::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        btn1_verify = tmp_3_i_fu_207_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(rst_read_read_fu_106_p2.read(), ap_const_lv1_1))) {
        btn1_verify = ap_const_lv1_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read())) {
        btn2_verify = tmp_3_i6_fu_231_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(rst_read_read_fu_106_p2.read(), ap_const_lv1_1))) {
        btn2_verify = ap_const_lv1_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read())) {
        btn3_verify = tmp_3_i1_fu_262_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(rst_read_read_fu_106_p2.read(), ap_const_lv1_1))) {
        btn3_verify = ap_const_lv1_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read())) {
        decrement_value = tmp_1_fu_274_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(rst_read_read_fu_106_p2.read(), ap_const_lv1_1))) {
        decrement_value = ap_const_lv32_1;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        lose_preg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
              esl_seteq<1,1,1>(rst_read_read_fu_106_p2.read(), ap_const_lv1_1)) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()))) {
            lose_preg =  (sc_logic) (ap_const_lv1_0[0]);
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        newRound = not_or_cond3_i_fu_325_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(newRound_load_load_fu_172_p1.read(), ap_const_lv1_1))) {
        newRound = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(rst_read_read_fu_106_p2.read(), ap_const_lv1_1))) {
        newRound = ap_const_lv1_1;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        time_remaining_out_V_preg = ap_const_lv10_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
             esl_seteq<1,1,1>(slow_clk_read_read_fu_82_p2.read(), ap_const_lv1_1))) {
            time_remaining_out_V_preg = ssdm_int_V_write_ass_fu_166_p2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(rst_read_read_fu_106_p2.read(), ap_const_lv1_1))) {
            time_remaining_out_V_preg = ap_const_lv10_280;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read())) {
        RandSeed = tmp_2_i_i_cast_fu_252_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        last_num_assign_1_reg_395 = grp_fu_197_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read())) {
        last_num_assign_2_reg_405 = grp_fu_222_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(newRound_load_load_fu_172_p1.read(), ap_const_lv1_1))) {
        tmp_i_i_reg_385 = tmp_i_i_fu_180_p2.read();
    }
}

void Game_logic::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Game_logic::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Game_logic::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Game_logic::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void Game_logic::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void Game_logic::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[39];
}

void Game_logic::thread_ap_CS_fsm_state54() {
    ap_CS_fsm_state54 = ap_CS_fsm.read()[53];
}

void Game_logic::thread_ap_CS_fsm_state55() {
    ap_CS_fsm_state55 = ap_CS_fsm.read()[54];
}

void Game_logic::thread_ap_CS_fsm_state69() {
    ap_CS_fsm_state69 = ap_CS_fsm.read()[68];
}

void Game_logic::thread_ap_CS_fsm_state70() {
    ap_CS_fsm_state70 = ap_CS_fsm.read()[69];
}

void Game_logic::thread_ap_done() {
    ap_done = ap_const_logic_0;
}

void Game_logic::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Game_logic::thread_ap_ready() {
    ap_ready = ap_const_logic_0;
}

void Game_logic::thread_grp_fu_197_ap_start() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_197_ap_start = ap_const_logic_1;
    } else {
        grp_fu_197_ap_start = ap_const_logic_0;
    }
}

void Game_logic::thread_grp_fu_197_p0() {
    grp_fu_197_p0 = (!ap_const_lv32_64.is_01() || !tmp_i_i_reg_385.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_64) + sc_biguint<32>(tmp_i_i_reg_385.read()));
}

void Game_logic::thread_grp_fu_197_p1() {
    grp_fu_197_p1 =  (sc_lv<8>) (ap_const_lv32_64);
}

void Game_logic::thread_grp_fu_222_ap_start() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        grp_fu_222_ap_start = ap_const_logic_1;
    } else {
        grp_fu_222_ap_start = ap_const_logic_0;
    }
}

void Game_logic::thread_grp_fu_222_p1() {
    grp_fu_222_p1 =  (sc_lv<8>) (ap_const_lv11_64);
}

void Game_logic::thread_grp_fu_243_ap_start() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read())) {
        grp_fu_243_ap_start = ap_const_logic_1;
    } else {
        grp_fu_243_ap_start = ap_const_logic_0;
    }
}

void Game_logic::thread_grp_fu_243_p1() {
    grp_fu_243_p1 =  (sc_lv<8>) (ap_const_lv11_64);
}

void Game_logic::thread_grp_fu_337_p0() {
    grp_fu_337_p0 =  (sc_lv<5>) (ap_const_lv11_D);
}

void Game_logic::thread_grp_fu_337_p1() {
    grp_fu_337_p1 = last_num_assign_1_reg_395.read().range(11-1, 0);
}

void Game_logic::thread_grp_fu_337_p2() {
    grp_fu_337_p2 =  (sc_lv<8>) (ap_const_lv11_64);
}

void Game_logic::thread_grp_fu_346_p0() {
    grp_fu_346_p0 =  (sc_lv<5>) (ap_const_lv11_D);
}

void Game_logic::thread_grp_fu_346_p1() {
    grp_fu_346_p1 =  (sc_lv<8>) (last_num_assign_2_reg_405.read());
}

void Game_logic::thread_grp_fu_346_p2() {
    grp_fu_346_p2 =  (sc_lv<8>) (ap_const_lv11_64);
}

void Game_logic::thread_lose() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(rst_read_read_fu_106_p2.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()))) {
        lose =  (sc_logic) (ap_const_lv1_0[0]);
    } else {
        lose = lose_preg.read();
    }
}

void Game_logic::thread_newRound_load_load_fu_172_p1() {
    newRound_load_load_fu_172_p1 = newRound.read();
}

void Game_logic::thread_not_or_cond3_i_fu_325_p2() {
    not_or_cond3_i_fu_325_p2 = (or_cond3_i_fu_319_p2.read() ^ ap_const_lv1_1);
}

void Game_logic::thread_or_cond3_i_fu_319_p2() {
    or_cond3_i_fu_319_p2 = (tmp_fu_313_p2.read() | tmp_i1_fu_290_p2.read());
}

void Game_logic::thread_rst_read_read_fu_106_p2() {
    rst_read_read_fu_106_p2 =  (sc_lv<1>) (rst.read());
}

void Game_logic::thread_slow_clk_read_read_fu_82_p2() {
    slow_clk_read_read_fu_82_p2 =  (sc_lv<1>) (slow_clk.read());
}

void Game_logic::thread_ssdm_int_V_write_ass_fu_166_p2() {
    ssdm_int_V_write_ass_fu_166_p2 = (!time_remaining_in_V.read().is_01() || !tmp_2_fu_162_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(time_remaining_in_V.read()) - sc_biguint<10>(tmp_2_fu_162_p1.read()));
}

void Game_logic::thread_time_remaining_out_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(slow_clk_read_read_fu_82_p2.read(), ap_const_lv1_1))) {
        time_remaining_out_V = ssdm_int_V_write_ass_fu_166_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(rst_read_read_fu_106_p2.read(), ap_const_lv1_1))) {
        time_remaining_out_V = ap_const_lv10_280;
    } else {
        time_remaining_out_V = time_remaining_out_V_preg.read();
    }
}

void Game_logic::thread_tmp1_i_fu_299_p1() {
    tmp1_i_fu_299_p1 =  (sc_lv<1>) (btn2.read());
}

void Game_logic::thread_tmp1_i_fu_299_p2() {
    tmp1_i_fu_299_p2 = (btn2_verify.read() ^ tmp1_i_fu_299_p1.read());
}

void Game_logic::thread_tmp2_i_fu_308_p1() {
    tmp2_i_fu_308_p1 =  (sc_lv<1>) (btn3.read());
}

void Game_logic::thread_tmp2_i_fu_308_p2() {
    tmp2_i_fu_308_p2 = (btn3_verify.read() ^ tmp2_i_fu_308_p1.read());
}

void Game_logic::thread_tmp_1_fu_274_p2() {
    tmp_1_fu_274_p2 = (!ap_const_lv32_2.is_01() || !decrement_value.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_2) + sc_biguint<32>(decrement_value.read()));
}

void Game_logic::thread_tmp_2_fu_162_p1() {
    tmp_2_fu_162_p1 = decrement_value.read().range(10-1, 0);
}

void Game_logic::thread_tmp_2_i_i_cast_fu_252_p1() {
    tmp_2_i_i_cast_fu_252_p1 = esl_zext<32,11>(grp_fu_243_p2.read());
}

void Game_logic::thread_tmp_3_i1_fu_262_p2() {
    tmp_3_i1_fu_262_p2 = (!tmp_6_fu_248_p1.read().is_01() || !ap_const_lv7_32.is_01())? sc_lv<1>(): (sc_biguint<7>(tmp_6_fu_248_p1.read()) > sc_biguint<7>(ap_const_lv7_32));
}

void Game_logic::thread_tmp_3_i6_fu_231_p2() {
    tmp_3_i6_fu_231_p2 = (!tmp_5_fu_227_p1.read().is_01() || !ap_const_lv7_32.is_01())? sc_lv<1>(): (sc_biguint<7>(tmp_5_fu_227_p1.read()) > sc_biguint<7>(ap_const_lv7_32));
}

void Game_logic::thread_tmp_3_i_fu_207_p2() {
    tmp_3_i_fu_207_p2 = (!tmp_4_fu_203_p1.read().is_01() || !ap_const_lv7_32.is_01())? sc_lv<1>(): (sc_biguint<7>(tmp_4_fu_203_p1.read()) > sc_biguint<7>(ap_const_lv7_32));
}

void Game_logic::thread_tmp_4_fu_203_p1() {
    tmp_4_fu_203_p1 = grp_fu_197_p2.read().range(7-1, 0);
}

void Game_logic::thread_tmp_5_fu_227_p1() {
    tmp_5_fu_227_p1 = grp_fu_222_p2.read().range(7-1, 0);
}

void Game_logic::thread_tmp_6_fu_248_p1() {
    tmp_6_fu_248_p1 = grp_fu_243_p2.read().range(7-1, 0);
}

void Game_logic::thread_tmp_fu_313_p2() {
    tmp_fu_313_p2 = (tmp1_i_fu_299_p2.read() | tmp2_i_fu_308_p2.read());
}

void Game_logic::thread_tmp_i1_fu_290_p1() {
    tmp_i1_fu_290_p1 =  (sc_lv<1>) (btn1.read());
}

void Game_logic::thread_tmp_i1_fu_290_p2() {
    tmp_i1_fu_290_p2 = (btn1_verify.read() ^ tmp_i1_fu_290_p1.read());
}

void Game_logic::thread_tmp_i_i_fu_180_p1() {
    tmp_i_i_fu_180_p1 = RandSeed.read();
}

void Game_logic::thread_tmp_i_i_fu_180_p2() {
    tmp_i_i_fu_180_p2 = (!ap_const_lv32_D.is_01() || !tmp_i_i_fu_180_p1.read().is_01())? sc_lv<32>(): sc_biguint<32>(ap_const_lv32_D) * sc_bigint<32>(tmp_i_i_fu_180_p1.read());
}

void Game_logic::thread_ap_NS_fsm() {
    if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state1))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state1;
        }
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state2))
    {
        ap_NS_fsm = ap_ST_fsm_state3;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state3))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, newRound_load_load_fu_172_p1.read()))) {
            ap_NS_fsm = ap_ST_fsm_state70;
        } else {
            ap_NS_fsm = ap_ST_fsm_state4;
        }
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state4))
    {
        ap_NS_fsm = ap_ST_fsm_state5;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state5))
    {
        ap_NS_fsm = ap_ST_fsm_state6;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state6))
    {
        ap_NS_fsm = ap_ST_fsm_state7;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state7))
    {
        ap_NS_fsm = ap_ST_fsm_state8;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state8))
    {
        ap_NS_fsm = ap_ST_fsm_state9;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state9))
    {
        ap_NS_fsm = ap_ST_fsm_state10;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state10))
    {
        ap_NS_fsm = ap_ST_fsm_state11;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state11))
    {
        ap_NS_fsm = ap_ST_fsm_state12;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state12))
    {
        ap_NS_fsm = ap_ST_fsm_state13;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state13))
    {
        ap_NS_fsm = ap_ST_fsm_state14;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state14))
    {
        ap_NS_fsm = ap_ST_fsm_state15;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state15))
    {
        ap_NS_fsm = ap_ST_fsm_state16;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state16))
    {
        ap_NS_fsm = ap_ST_fsm_state17;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state17))
    {
        ap_NS_fsm = ap_ST_fsm_state18;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state18))
    {
        ap_NS_fsm = ap_ST_fsm_state19;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state19))
    {
        ap_NS_fsm = ap_ST_fsm_state20;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state20))
    {
        ap_NS_fsm = ap_ST_fsm_state21;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state21))
    {
        ap_NS_fsm = ap_ST_fsm_state22;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state22))
    {
        ap_NS_fsm = ap_ST_fsm_state23;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state23))
    {
        ap_NS_fsm = ap_ST_fsm_state24;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state24))
    {
        ap_NS_fsm = ap_ST_fsm_state25;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state25))
    {
        ap_NS_fsm = ap_ST_fsm_state26;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state26))
    {
        ap_NS_fsm = ap_ST_fsm_state27;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state27))
    {
        ap_NS_fsm = ap_ST_fsm_state28;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state28))
    {
        ap_NS_fsm = ap_ST_fsm_state29;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state29))
    {
        ap_NS_fsm = ap_ST_fsm_state30;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state30))
    {
        ap_NS_fsm = ap_ST_fsm_state31;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state31))
    {
        ap_NS_fsm = ap_ST_fsm_state32;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state32))
    {
        ap_NS_fsm = ap_ST_fsm_state33;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state33))
    {
        ap_NS_fsm = ap_ST_fsm_state34;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state34))
    {
        ap_NS_fsm = ap_ST_fsm_state35;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state35))
    {
        ap_NS_fsm = ap_ST_fsm_state36;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state36))
    {
        ap_NS_fsm = ap_ST_fsm_state37;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state37))
    {
        ap_NS_fsm = ap_ST_fsm_state38;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state38))
    {
        ap_NS_fsm = ap_ST_fsm_state39;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state39))
    {
        ap_NS_fsm = ap_ST_fsm_state40;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state40))
    {
        ap_NS_fsm = ap_ST_fsm_state41;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state41))
    {
        ap_NS_fsm = ap_ST_fsm_state42;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state42))
    {
        ap_NS_fsm = ap_ST_fsm_state43;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state43))
    {
        ap_NS_fsm = ap_ST_fsm_state44;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state44))
    {
        ap_NS_fsm = ap_ST_fsm_state45;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state45))
    {
        ap_NS_fsm = ap_ST_fsm_state46;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state46))
    {
        ap_NS_fsm = ap_ST_fsm_state47;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state47))
    {
        ap_NS_fsm = ap_ST_fsm_state48;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state48))
    {
        ap_NS_fsm = ap_ST_fsm_state49;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state49))
    {
        ap_NS_fsm = ap_ST_fsm_state50;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state50))
    {
        ap_NS_fsm = ap_ST_fsm_state51;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state51))
    {
        ap_NS_fsm = ap_ST_fsm_state52;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state52))
    {
        ap_NS_fsm = ap_ST_fsm_state53;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state53))
    {
        ap_NS_fsm = ap_ST_fsm_state54;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state54))
    {
        ap_NS_fsm = ap_ST_fsm_state55;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state55))
    {
        ap_NS_fsm = ap_ST_fsm_state56;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state56))
    {
        ap_NS_fsm = ap_ST_fsm_state57;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state57))
    {
        ap_NS_fsm = ap_ST_fsm_state58;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state58))
    {
        ap_NS_fsm = ap_ST_fsm_state59;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state59))
    {
        ap_NS_fsm = ap_ST_fsm_state60;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state60))
    {
        ap_NS_fsm = ap_ST_fsm_state61;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state61))
    {
        ap_NS_fsm = ap_ST_fsm_state62;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state62))
    {
        ap_NS_fsm = ap_ST_fsm_state63;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state63))
    {
        ap_NS_fsm = ap_ST_fsm_state64;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state64))
    {
        ap_NS_fsm = ap_ST_fsm_state65;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state65))
    {
        ap_NS_fsm = ap_ST_fsm_state66;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state66))
    {
        ap_NS_fsm = ap_ST_fsm_state67;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state67))
    {
        ap_NS_fsm = ap_ST_fsm_state68;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state68))
    {
        ap_NS_fsm = ap_ST_fsm_state69;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state69))
    {
        ap_NS_fsm = ap_ST_fsm_state70;
    }
    else if (esl_seteq<1,70,70>(ap_CS_fsm.read(), ap_ST_fsm_state70))
    {
        ap_NS_fsm = ap_ST_fsm_state2;
    }
    else
    {
        ap_NS_fsm = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}
void Game_logic::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"rst\" :  \"" << rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"btn1\" :  \"" << btn1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"btn2\" :  \"" << btn2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"btn3\" :  \"" << btn3.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"slow_clk\" :  \"" << slow_clk.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"lose\" :  \"" << lose.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"time_remaining_out_V\" :  \"" << time_remaining_out_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"time_remaining_in_V\" :  \"" << time_remaining_in_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"verify1_out\" :  \"" << verify1_out.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"verify2_out\" :  \"" << verify2_out.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"verify3_out\" :  \"" << verify3_out.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

