// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Gamelogic2.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Gamelogic2::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Gamelogic2::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<39> Gamelogic2::ap_ST_fsm_state1 = "1";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state2 = "10";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state3 = "100";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state4 = "1000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state5 = "10000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state6 = "100000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state7 = "1000000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state8 = "10000000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state9 = "100000000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state10 = "1000000000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state11 = "10000000000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state12 = "100000000000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<39> Gamelogic2::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<32> Gamelogic2::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> Gamelogic2::ap_const_lv1_1 = "1";
const sc_lv<1> Gamelogic2::ap_const_lv1_0 = "0";
const sc_lv<32> Gamelogic2::ap_const_lv32_1 = "1";
const sc_lv<32> Gamelogic2::ap_const_lv32_2 = "10";
const sc_lv<32> Gamelogic2::ap_const_lv32_3 = "11";
const sc_lv<32> Gamelogic2::ap_const_lv32_26 = "100110";
const sc_lv<14> Gamelogic2::ap_const_lv14_140 = "101000000";
const sc_lv<13> Gamelogic2::ap_const_lv13_1FF6 = "1111111110110";
const sc_lv<13> Gamelogic2::ap_const_lv13_A = "1010";
const sc_lv<32> Gamelogic2::ap_const_lv32_A = "1010";
const sc_lv<32> Gamelogic2::ap_const_lv32_D = "1101";
const sc_lv<32> Gamelogic2::ap_const_lv32_64 = "1100100";
const sc_lv<7> Gamelogic2::ap_const_lv7_32 = "110010";
const sc_lv<12> Gamelogic2::ap_const_lv12_0 = "000000000000";
const sc_lv<12> Gamelogic2::ap_const_lv12_27F = "1001111111";
const bool Gamelogic2::ap_const_boolean_1 = true;

Gamelogic2::Gamelogic2(sc_module_name name) : sc_module(name), mVcdFile(0) {
    Gamelogic2_urem_3bkb_U1 = new Gamelogic2_urem_3bkb<1,36,32,8,32>("Gamelogic2_urem_3bkb_U1");
    Gamelogic2_urem_3bkb_U1->clk(ap_clk);
    Gamelogic2_urem_3bkb_U1->reset(ap_rst);
    Gamelogic2_urem_3bkb_U1->start(grp_fu_545_ap_start);
    Gamelogic2_urem_3bkb_U1->done(grp_fu_545_ap_done);
    Gamelogic2_urem_3bkb_U1->din0(grp_fu_545_p0);
    Gamelogic2_urem_3bkb_U1->din1(grp_fu_545_p1);
    Gamelogic2_urem_3bkb_U1->ce(ap_var_for_const0);
    Gamelogic2_urem_3bkb_U1->dout(grp_fu_545_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_btn_count_flag_2_phi_fu_189_p6);
    sensitive << ( game_over_load_reg_692 );
    sensitive << ( tmp_1_reg_702 );
    sensitive << ( btn_count_flag_2_reg_186 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_ap_phi_mux_btn_count_new_2_phi_fu_201_p6);
    sensitive << ( game_over_load_reg_692 );
    sensitive << ( tmp_1_reg_702 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( btn_count_new_2_reg_198 );

    SC_METHOD(thread_ap_phi_mux_end_game_write_assig_phi_fu_239_p6);
    sensitive << ( first_run_loc_reg_174 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( tmp_i_fu_574_p2 );
    sensitive << ( tmp_1_i_fu_579_p2 );

    SC_METHOD(thread_ap_phi_mux_first_run_flag_1_phi_fu_254_p4);
    sensitive << ( first_run_flag_reg_160 );
    sensitive << ( first_run_loc_reg_174 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_ap_phi_mux_first_run_new_1_phi_fu_265_p4);
    sensitive << ( first_run_loc_reg_174 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_ap_phi_mux_new_center_9_phi_fu_213_p6);
    sensitive << ( game_over_load_reg_692 );
    sensitive << ( new_center_8_reg_696 );
    sensitive << ( tmp_1_reg_702 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( new_center_9_reg_210 );

    SC_METHOD(thread_ap_phi_mux_new_center_s_phi_fu_276_p4);
    sensitive << ( first_run_loc_reg_174 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_phi_mux_new_center_9_phi_fu_213_p6 );

    SC_METHOD(thread_ap_phi_mux_right_wins_write_ass_phi_fu_224_p6);
    sensitive << ( first_run_loc_reg_174 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( tmp_i_fu_574_p2 );
    sensitive << ( tmp_1_i_fu_579_p2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_brmerge1_fu_316_p2);
    sensitive << ( tmp1_fu_312_p2 );
    sensitive << ( tmp_fu_308_p2 );

    SC_METHOD(thread_btn_count_loc_fu_332_p3);
    sensitive << ( btn_count );
    sensitive << ( brmerge1_fu_316_p2 );
    sensitive << ( tmp_s_fu_326_p2 );

    SC_METHOD(thread_center_line_out_V);
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( tmp_3_fu_584_p3 );
    sensitive << ( tmp_4_fu_592_p1 );

    SC_METHOD(thread_end_game);
    sensitive << ( first_run_loc_reg_174 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_phi_mux_end_game_write_assig_phi_fu_239_p6 );

    SC_METHOD(thread_end_game_ap_vld);
    sensitive << ( first_run_loc_reg_174 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_game_over_load_load_fu_340_p1);
    sensitive << ( game_over );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_grp_fu_545_ap_start);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_545_p0);
    sensitive << ( tmp_i_i_reg_706 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_545_p1);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_new_center_1_cast_fu_349_p1);
    sensitive << ( new_center_fu_344_p2 );

    SC_METHOD(thread_new_center_1_fu_353_p2);
    sensitive << ( new_center_cast_reg_666 );

    SC_METHOD(thread_new_center_2_cast_fu_358_p1);
    sensitive << ( new_center_1_fu_353_p2 );

    SC_METHOD(thread_new_center_2_fu_386_p3);
    sensitive << ( sel_tmp_fu_382_p2 );
    sensitive << ( new_center_1_cast_fu_349_p1 );
    sensitive << ( p_1_cast_fu_378_p1 );

    SC_METHOD(thread_new_center_3_fu_409_p3);
    sensitive << ( sel_tmp4_fu_404_p2 );
    sensitive << ( new_center_2_cast_fu_358_p1 );
    sensitive << ( new_center_2_fu_386_p3 );

    SC_METHOD(thread_new_center_4_fu_433_p3);
    sensitive << ( new_center_2_cast_fu_358_p1 );
    sensitive << ( sel_tmp1_fu_428_p2 );
    sensitive << ( new_center_3_fu_409_p3 );

    SC_METHOD(thread_new_center_5_fu_452_p3);
    sensitive << ( sel_tmp7_fu_446_p2 );
    sensitive << ( p_cast_fu_368_p1 );
    sensitive << ( new_center_4_fu_433_p3 );

    SC_METHOD(thread_new_center_6_fu_470_p3);
    sensitive << ( new_center_2_cast_fu_358_p1 );
    sensitive << ( sel_tmp10_fu_465_p2 );
    sensitive << ( new_center_5_fu_452_p3 );

    SC_METHOD(thread_new_center_7_fu_493_p3);
    sensitive << ( new_center_1_cast_fu_349_p1 );
    sensitive << ( sel_tmp12_fu_488_p2 );
    sensitive << ( new_center_6_fu_470_p3 );

    SC_METHOD(thread_new_center_8_fu_517_p3);
    sensitive << ( new_center_1_cast_fu_349_p1 );
    sensitive << ( sel_tmp14_fu_512_p2 );
    sensitive << ( new_center_7_fu_493_p3 );

    SC_METHOD(thread_new_center_cast1_fu_290_p1);
    sensitive << ( center_line_in_V );

    SC_METHOD(thread_new_center_cast_fu_294_p1);
    sensitive << ( center_line_in_V );

    SC_METHOD(thread_new_center_fu_344_p2);
    sensitive << ( new_center_cast_reg_666 );

    SC_METHOD(thread_p_1_cast_fu_378_p1);
    sensitive << ( p_1_fu_372_p3 );

    SC_METHOD(thread_p_1_fu_372_p0);
    sensitive << ( btn3 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_p_1_fu_372_p3);
    sensitive << ( new_center_cast_reg_666 );
    sensitive << ( new_center_1_fu_353_p2 );
    sensitive << ( p_1_fu_372_p0 );

    SC_METHOD(thread_p_cast_fu_368_p1);
    sensitive << ( p_s_fu_362_p3 );

    SC_METHOD(thread_p_s_fu_362_p0);
    sensitive << ( btn3 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_p_s_fu_362_p3);
    sensitive << ( new_center_cast_reg_666 );
    sensitive << ( new_center_fu_344_p2 );
    sensitive << ( p_s_fu_362_p0 );

    SC_METHOD(thread_reset_game_in_read_read_fu_94_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( reset_game_in );

    SC_METHOD(thread_reset_game_out);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( reset_game_in );
    sensitive << ( reset_game_out_preg );

    SC_METHOD(thread_right_out);
    sensitive << ( game_over_load_reg_692 );
    sensitive << ( tmp_1_reg_702 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( tmp_2_fu_551_p1 );

    SC_METHOD(thread_right_wins);
    sensitive << ( first_run_loc_reg_174 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_phi_mux_right_wins_write_ass_phi_fu_224_p6 );

    SC_METHOD(thread_sel_tmp10_fu_465_p0);
    sensitive << ( btn0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sel_tmp10_fu_465_p2);
    sensitive << ( sel_tmp10_fu_465_p0 );
    sensitive << ( sel_tmp5_fu_460_p2 );

    SC_METHOD(thread_sel_tmp11_fu_482_p2);
    sensitive << ( sel_tmp24_demorgan_fu_478_p2 );

    SC_METHOD(thread_sel_tmp12_fu_488_p0);
    sensitive << ( btn2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sel_tmp12_fu_488_p2);
    sensitive << ( sel_tmp12_fu_488_p0 );
    sensitive << ( sel_tmp11_fu_482_p2 );

    SC_METHOD(thread_sel_tmp13_fu_506_p2);
    sensitive << ( sel_tmp31_demorgan_fu_501_p2 );

    SC_METHOD(thread_sel_tmp14_fu_512_p0);
    sensitive << ( btn1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sel_tmp14_fu_512_p2);
    sensitive << ( sel_tmp14_fu_512_p0 );
    sensitive << ( sel_tmp13_fu_506_p2 );

    SC_METHOD(thread_sel_tmp1_fu_428_p1);
    sensitive << ( btn1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sel_tmp1_fu_428_p2);
    sensitive << ( sel_tmp9_fu_422_p2 );
    sensitive << ( sel_tmp1_fu_428_p1 );

    SC_METHOD(thread_sel_tmp24_demorgan_fu_478_p0);
    sensitive << ( right_in );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sel_tmp24_demorgan_fu_478_p1);
    sensitive << ( btn0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sel_tmp24_demorgan_fu_478_p2);
    sensitive << ( sel_tmp24_demorgan_fu_478_p0 );
    sensitive << ( sel_tmp24_demorgan_fu_478_p1 );

    SC_METHOD(thread_sel_tmp2_fu_394_p0);
    sensitive << ( btn0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sel_tmp2_fu_394_p2);
    sensitive << ( sel_tmp2_fu_394_p0 );

    SC_METHOD(thread_sel_tmp31_demorgan_fu_501_p1);
    sensitive << ( btn2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sel_tmp31_demorgan_fu_501_p2);
    sensitive << ( sel_tmp24_demorgan_fu_478_p2 );
    sensitive << ( sel_tmp31_demorgan_fu_501_p1 );

    SC_METHOD(thread_sel_tmp3_fu_399_p0);
    sensitive << ( right_in );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sel_tmp3_fu_399_p2);
    sensitive << ( sel_tmp3_fu_399_p0 );
    sensitive << ( sel_tmp2_fu_394_p2 );

    SC_METHOD(thread_sel_tmp4_fu_404_p1);
    sensitive << ( btn2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sel_tmp4_fu_404_p2);
    sensitive << ( sel_tmp3_fu_399_p2 );
    sensitive << ( sel_tmp4_fu_404_p1 );

    SC_METHOD(thread_sel_tmp5_fu_460_p0);
    sensitive << ( right_in );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sel_tmp5_fu_460_p2);
    sensitive << ( sel_tmp5_fu_460_p0 );

    SC_METHOD(thread_sel_tmp6_fu_441_p0);
    sensitive << ( btn1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sel_tmp6_fu_441_p2);
    sensitive << ( sel_tmp6_fu_441_p0 );

    SC_METHOD(thread_sel_tmp7_fu_446_p2);
    sensitive << ( sel_tmp9_fu_422_p2 );
    sensitive << ( sel_tmp6_fu_441_p2 );

    SC_METHOD(thread_sel_tmp8_fu_417_p0);
    sensitive << ( btn2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sel_tmp8_fu_417_p2);
    sensitive << ( sel_tmp8_fu_417_p0 );

    SC_METHOD(thread_sel_tmp9_fu_422_p2);
    sensitive << ( sel_tmp3_fu_399_p2 );
    sensitive << ( sel_tmp8_fu_417_p2 );

    SC_METHOD(thread_sel_tmp_fu_382_p0);
    sensitive << ( right_in );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sel_tmp_fu_382_p1);
    sensitive << ( btn0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sel_tmp_fu_382_p2);
    sensitive << ( sel_tmp_fu_382_p0 );
    sensitive << ( sel_tmp_fu_382_p1 );

    SC_METHOD(thread_tmp1_fu_312_p0);
    sensitive << ( btn0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tmp1_fu_312_p1);
    sensitive << ( btn3 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tmp1_fu_312_p2);
    sensitive << ( tmp1_fu_312_p0 );
    sensitive << ( tmp1_fu_312_p1 );

    SC_METHOD(thread_tmp_1_fu_525_p2);
    sensitive << ( btn_count_loc_reg_685 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_tmp_1_i_fu_579_p2);
    sensitive << ( center_line_in_V );
    sensitive << ( first_run_loc_reg_174 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( tmp_i_fu_574_p2 );

    SC_METHOD(thread_tmp_2_fu_551_p1);
    sensitive << ( grp_fu_545_p2 );

    SC_METHOD(thread_tmp_3_fu_584_p3);
    sensitive << ( ap_phi_mux_new_center_s_phi_fu_276_p4 );

    SC_METHOD(thread_tmp_4_fu_592_p1);
    sensitive << ( ap_phi_mux_new_center_s_phi_fu_276_p4 );

    SC_METHOD(thread_tmp_fu_308_p0);
    sensitive << ( btn1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tmp_fu_308_p1);
    sensitive << ( btn2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tmp_fu_308_p2);
    sensitive << ( tmp_fu_308_p0 );
    sensitive << ( tmp_fu_308_p1 );

    SC_METHOD(thread_tmp_i_fu_574_p2);
    sensitive << ( center_line_in_V );
    sensitive << ( first_run_loc_reg_174 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_tmp_i_i_fu_534_p1);
    sensitive << ( RandSeed );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_tmp_i_i_fu_534_p2);
    sensitive << ( tmp_i_i_fu_534_p1 );

    SC_METHOD(thread_tmp_s_fu_326_p2);
    sensitive << ( btn_count );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( game_over_load_load_fu_340_p1 );
    sensitive << ( tmp_1_fu_525_p2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000000000000000000000000000000000001";
    first_run = "1";
    game_over = "0";
    btn_count = "00000000000000000000000000000000";
    RandSeed = "00000000000000000000000000000111";
    reset_game_out_preg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Gamelogic2_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, btn0, "(port)btn0");
    sc_trace(mVcdFile, btn1, "(port)btn1");
    sc_trace(mVcdFile, btn2, "(port)btn2");
    sc_trace(mVcdFile, btn3, "(port)btn3");
    sc_trace(mVcdFile, reset_game_in, "(port)reset_game_in");
    sc_trace(mVcdFile, reset_game_out, "(port)reset_game_out");
    sc_trace(mVcdFile, right_wins, "(port)right_wins");
    sc_trace(mVcdFile, end_game, "(port)end_game");
    sc_trace(mVcdFile, end_game_ap_vld, "(port)end_game_ap_vld");
    sc_trace(mVcdFile, center_line_out_V, "(port)center_line_out_V");
    sc_trace(mVcdFile, center_line_in_V, "(port)center_line_in_V");
    sc_trace(mVcdFile, right_out, "(port)right_out");
    sc_trace(mVcdFile, right_in, "(port)right_in");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, first_run, "first_run");
    sc_trace(mVcdFile, game_over, "game_over");
    sc_trace(mVcdFile, btn_count, "btn_count");
    sc_trace(mVcdFile, RandSeed, "RandSeed");
    sc_trace(mVcdFile, new_center_cast1_fu_290_p1, "new_center_cast1_fu_290_p1");
    sc_trace(mVcdFile, new_center_cast1_reg_661, "new_center_cast1_reg_661");
    sc_trace(mVcdFile, new_center_cast_fu_294_p1, "new_center_cast_fu_294_p1");
    sc_trace(mVcdFile, new_center_cast_reg_666, "new_center_cast_reg_666");
    sc_trace(mVcdFile, brmerge1_fu_316_p2, "brmerge1_fu_316_p2");
    sc_trace(mVcdFile, brmerge1_reg_679, "brmerge1_reg_679");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, btn_count_loc_fu_332_p3, "btn_count_loc_fu_332_p3");
    sc_trace(mVcdFile, btn_count_loc_reg_685, "btn_count_loc_reg_685");
    sc_trace(mVcdFile, game_over_load_load_fu_340_p1, "game_over_load_load_fu_340_p1");
    sc_trace(mVcdFile, game_over_load_reg_692, "game_over_load_reg_692");
    sc_trace(mVcdFile, new_center_8_fu_517_p3, "new_center_8_fu_517_p3");
    sc_trace(mVcdFile, new_center_8_reg_696, "new_center_8_reg_696");
    sc_trace(mVcdFile, tmp_1_fu_525_p2, "tmp_1_fu_525_p2");
    sc_trace(mVcdFile, tmp_1_reg_702, "tmp_1_reg_702");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_i_i_fu_534_p2, "tmp_i_i_fu_534_p2");
    sc_trace(mVcdFile, tmp_i_i_reg_706, "tmp_i_i_reg_706");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, first_run_flag_reg_160, "first_run_flag_reg_160");
    sc_trace(mVcdFile, reset_game_in_read_read_fu_94_p2, "reset_game_in_read_read_fu_94_p2");
    sc_trace(mVcdFile, first_run_loc_reg_174, "first_run_loc_reg_174");
    sc_trace(mVcdFile, ap_phi_mux_btn_count_flag_2_phi_fu_189_p6, "ap_phi_mux_btn_count_flag_2_phi_fu_189_p6");
    sc_trace(mVcdFile, btn_count_flag_2_reg_186, "btn_count_flag_2_reg_186");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, ap_phi_mux_btn_count_new_2_phi_fu_201_p6, "ap_phi_mux_btn_count_new_2_phi_fu_201_p6");
    sc_trace(mVcdFile, btn_count_new_2_reg_198, "btn_count_new_2_reg_198");
    sc_trace(mVcdFile, ap_phi_mux_new_center_9_phi_fu_213_p6, "ap_phi_mux_new_center_9_phi_fu_213_p6");
    sc_trace(mVcdFile, new_center_9_reg_210, "new_center_9_reg_210");
    sc_trace(mVcdFile, ap_phi_mux_right_wins_write_ass_phi_fu_224_p6, "ap_phi_mux_right_wins_write_ass_phi_fu_224_p6");
    sc_trace(mVcdFile, tmp_i_fu_574_p2, "tmp_i_fu_574_p2");
    sc_trace(mVcdFile, tmp_1_i_fu_579_p2, "tmp_1_i_fu_579_p2");
    sc_trace(mVcdFile, ap_phi_mux_end_game_write_assig_phi_fu_239_p6, "ap_phi_mux_end_game_write_assig_phi_fu_239_p6");
    sc_trace(mVcdFile, ap_phi_mux_first_run_flag_1_phi_fu_254_p4, "ap_phi_mux_first_run_flag_1_phi_fu_254_p4");
    sc_trace(mVcdFile, ap_phi_mux_first_run_new_1_phi_fu_265_p4, "ap_phi_mux_first_run_new_1_phi_fu_265_p4");
    sc_trace(mVcdFile, ap_phi_mux_new_center_s_phi_fu_276_p4, "ap_phi_mux_new_center_s_phi_fu_276_p4");
    sc_trace(mVcdFile, grp_fu_545_p2, "grp_fu_545_p2");
    sc_trace(mVcdFile, reset_game_out_preg, "reset_game_out_preg");
    sc_trace(mVcdFile, tmp_fu_308_p0, "tmp_fu_308_p0");
    sc_trace(mVcdFile, tmp_fu_308_p1, "tmp_fu_308_p1");
    sc_trace(mVcdFile, tmp1_fu_312_p0, "tmp1_fu_312_p0");
    sc_trace(mVcdFile, tmp1_fu_312_p1, "tmp1_fu_312_p1");
    sc_trace(mVcdFile, tmp1_fu_312_p2, "tmp1_fu_312_p2");
    sc_trace(mVcdFile, tmp_fu_308_p2, "tmp_fu_308_p2");
    sc_trace(mVcdFile, tmp_s_fu_326_p2, "tmp_s_fu_326_p2");
    sc_trace(mVcdFile, new_center_fu_344_p2, "new_center_fu_344_p2");
    sc_trace(mVcdFile, new_center_1_fu_353_p2, "new_center_1_fu_353_p2");
    sc_trace(mVcdFile, p_s_fu_362_p0, "p_s_fu_362_p0");
    sc_trace(mVcdFile, p_s_fu_362_p3, "p_s_fu_362_p3");
    sc_trace(mVcdFile, p_1_fu_372_p0, "p_1_fu_372_p0");
    sc_trace(mVcdFile, p_1_fu_372_p3, "p_1_fu_372_p3");
    sc_trace(mVcdFile, sel_tmp_fu_382_p0, "sel_tmp_fu_382_p0");
    sc_trace(mVcdFile, sel_tmp_fu_382_p1, "sel_tmp_fu_382_p1");
    sc_trace(mVcdFile, sel_tmp_fu_382_p2, "sel_tmp_fu_382_p2");
    sc_trace(mVcdFile, new_center_1_cast_fu_349_p1, "new_center_1_cast_fu_349_p1");
    sc_trace(mVcdFile, p_1_cast_fu_378_p1, "p_1_cast_fu_378_p1");
    sc_trace(mVcdFile, sel_tmp2_fu_394_p0, "sel_tmp2_fu_394_p0");
    sc_trace(mVcdFile, sel_tmp3_fu_399_p0, "sel_tmp3_fu_399_p0");
    sc_trace(mVcdFile, sel_tmp2_fu_394_p2, "sel_tmp2_fu_394_p2");
    sc_trace(mVcdFile, sel_tmp3_fu_399_p2, "sel_tmp3_fu_399_p2");
    sc_trace(mVcdFile, sel_tmp4_fu_404_p1, "sel_tmp4_fu_404_p1");
    sc_trace(mVcdFile, sel_tmp4_fu_404_p2, "sel_tmp4_fu_404_p2");
    sc_trace(mVcdFile, new_center_2_cast_fu_358_p1, "new_center_2_cast_fu_358_p1");
    sc_trace(mVcdFile, new_center_2_fu_386_p3, "new_center_2_fu_386_p3");
    sc_trace(mVcdFile, sel_tmp8_fu_417_p0, "sel_tmp8_fu_417_p0");
    sc_trace(mVcdFile, sel_tmp8_fu_417_p2, "sel_tmp8_fu_417_p2");
    sc_trace(mVcdFile, sel_tmp9_fu_422_p2, "sel_tmp9_fu_422_p2");
    sc_trace(mVcdFile, sel_tmp1_fu_428_p1, "sel_tmp1_fu_428_p1");
    sc_trace(mVcdFile, sel_tmp1_fu_428_p2, "sel_tmp1_fu_428_p2");
    sc_trace(mVcdFile, new_center_3_fu_409_p3, "new_center_3_fu_409_p3");
    sc_trace(mVcdFile, sel_tmp6_fu_441_p0, "sel_tmp6_fu_441_p0");
    sc_trace(mVcdFile, sel_tmp6_fu_441_p2, "sel_tmp6_fu_441_p2");
    sc_trace(mVcdFile, sel_tmp7_fu_446_p2, "sel_tmp7_fu_446_p2");
    sc_trace(mVcdFile, p_cast_fu_368_p1, "p_cast_fu_368_p1");
    sc_trace(mVcdFile, new_center_4_fu_433_p3, "new_center_4_fu_433_p3");
    sc_trace(mVcdFile, sel_tmp5_fu_460_p0, "sel_tmp5_fu_460_p0");
    sc_trace(mVcdFile, sel_tmp10_fu_465_p0, "sel_tmp10_fu_465_p0");
    sc_trace(mVcdFile, sel_tmp5_fu_460_p2, "sel_tmp5_fu_460_p2");
    sc_trace(mVcdFile, sel_tmp10_fu_465_p2, "sel_tmp10_fu_465_p2");
    sc_trace(mVcdFile, new_center_5_fu_452_p3, "new_center_5_fu_452_p3");
    sc_trace(mVcdFile, sel_tmp24_demorgan_fu_478_p0, "sel_tmp24_demorgan_fu_478_p0");
    sc_trace(mVcdFile, sel_tmp24_demorgan_fu_478_p1, "sel_tmp24_demorgan_fu_478_p1");
    sc_trace(mVcdFile, sel_tmp24_demorgan_fu_478_p2, "sel_tmp24_demorgan_fu_478_p2");
    sc_trace(mVcdFile, sel_tmp12_fu_488_p0, "sel_tmp12_fu_488_p0");
    sc_trace(mVcdFile, sel_tmp11_fu_482_p2, "sel_tmp11_fu_482_p2");
    sc_trace(mVcdFile, sel_tmp12_fu_488_p2, "sel_tmp12_fu_488_p2");
    sc_trace(mVcdFile, new_center_6_fu_470_p3, "new_center_6_fu_470_p3");
    sc_trace(mVcdFile, sel_tmp31_demorgan_fu_501_p1, "sel_tmp31_demorgan_fu_501_p1");
    sc_trace(mVcdFile, sel_tmp31_demorgan_fu_501_p2, "sel_tmp31_demorgan_fu_501_p2");
    sc_trace(mVcdFile, sel_tmp14_fu_512_p0, "sel_tmp14_fu_512_p0");
    sc_trace(mVcdFile, sel_tmp13_fu_506_p2, "sel_tmp13_fu_506_p2");
    sc_trace(mVcdFile, sel_tmp14_fu_512_p2, "sel_tmp14_fu_512_p2");
    sc_trace(mVcdFile, new_center_7_fu_493_p3, "new_center_7_fu_493_p3");
    sc_trace(mVcdFile, tmp_i_i_fu_534_p1, "tmp_i_i_fu_534_p1");
    sc_trace(mVcdFile, grp_fu_545_p0, "grp_fu_545_p0");
    sc_trace(mVcdFile, grp_fu_545_p1, "grp_fu_545_p1");
    sc_trace(mVcdFile, tmp_2_fu_551_p1, "tmp_2_fu_551_p1");
    sc_trace(mVcdFile, tmp_3_fu_584_p3, "tmp_3_fu_584_p3");
    sc_trace(mVcdFile, tmp_4_fu_592_p1, "tmp_4_fu_592_p1");
    sc_trace(mVcdFile, grp_fu_545_ap_start, "grp_fu_545_ap_start");
    sc_trace(mVcdFile, grp_fu_545_ap_done, "grp_fu_545_ap_done");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("Gamelogic2.hdltvin.dat");
    mHdltvoutHandle.open("Gamelogic2.hdltvout.dat");
}

Gamelogic2::~Gamelogic2() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete Gamelogic2_urem_3bkb_U1;
}

void Gamelogic2::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void Gamelogic2::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_525_p2.read()))) {
        btn_count_flag_2_reg_186 = brmerge1_reg_679.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, game_over_load_reg_692.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_702.read()))) {
        btn_count_flag_2_reg_186 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, game_over_load_load_fu_340_p1.read()))) {
        btn_count_flag_2_reg_186 = brmerge1_fu_316_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_525_p2.read()))) {
        btn_count_new_2_reg_198 = btn_count_loc_reg_685.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, game_over_load_reg_692.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_702.read()))) {
        btn_count_new_2_reg_198 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, game_over_load_load_fu_340_p1.read()))) {
        btn_count_new_2_reg_198 = btn_count_loc_fu_332_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, reset_game_in_read_read_fu_94_p2.read())) {
            first_run_flag_reg_160 = ap_const_lv1_0;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, reset_game_in_read_read_fu_94_p2.read())) {
            first_run_flag_reg_160 = ap_const_lv1_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, reset_game_in_read_read_fu_94_p2.read())) {
            first_run_loc_reg_174 = first_run.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, reset_game_in_read_read_fu_94_p2.read())) {
            first_run_loc_reg_174 = ap_const_lv1_1;
        }
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, first_run_loc_reg_174.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_i_fu_574_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, first_run_loc_reg_174.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_fu_574_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_i_fu_579_p2.read())))) {
        game_over = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, reset_game_in_read_read_fu_94_p2.read()))) {
        game_over = ap_const_lv1_0;
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, game_over_load_reg_692.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_702.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_525_p2.read())))) {
        new_center_9_reg_210 = new_center_8_reg_696.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, game_over_load_load_fu_340_p1.read()))) {
        new_center_9_reg_210 = new_center_cast1_reg_661.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        reset_game_out_preg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            reset_game_out_preg = reset_game_in.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, game_over_load_reg_692.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_702.read()))) {
        RandSeed = grp_fu_545_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        brmerge1_reg_679 = brmerge1_fu_316_p2.read();
        btn_count_loc_reg_685 = btn_count_loc_fu_332_p3.read();
        game_over_load_reg_692 = game_over.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_btn_count_flag_2_phi_fu_189_p6.read()))) {
        btn_count = ap_phi_mux_btn_count_new_2_phi_fu_201_p6.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_first_run_flag_1_phi_fu_254_p4.read()))) {
        first_run = ap_phi_mux_first_run_new_1_phi_fu_265_p4.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, game_over_load_load_fu_340_p1.read()))) {
        new_center_8_reg_696 = new_center_8_fu_517_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        new_center_cast1_reg_661 = new_center_cast1_fu_290_p1.read();
        new_center_cast_reg_666 = new_center_cast_fu_294_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        tmp_1_reg_702 = tmp_1_fu_525_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_525_p2.read()))) {
        tmp_i_i_reg_706 = tmp_i_i_fu_534_p2.read();
    }
}

void Gamelogic2::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Gamelogic2::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Gamelogic2::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Gamelogic2::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void Gamelogic2::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void Gamelogic2::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Gamelogic2::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Gamelogic2::thread_ap_phi_mux_btn_count_flag_2_phi_fu_189_p6() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, game_over_load_reg_692.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_702.read()))) {
        ap_phi_mux_btn_count_flag_2_phi_fu_189_p6 = ap_const_lv1_1;
    } else {
        ap_phi_mux_btn_count_flag_2_phi_fu_189_p6 = btn_count_flag_2_reg_186.read();
    }
}

void Gamelogic2::thread_ap_phi_mux_btn_count_new_2_phi_fu_201_p6() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, game_over_load_reg_692.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_702.read()))) {
        ap_phi_mux_btn_count_new_2_phi_fu_201_p6 = ap_const_lv32_0;
    } else {
        ap_phi_mux_btn_count_new_2_phi_fu_201_p6 = btn_count_new_2_reg_198.read();
    }
}

void Gamelogic2::thread_ap_phi_mux_end_game_write_assig_phi_fu_239_p6() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, first_run_loc_reg_174.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_fu_574_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_i_fu_579_p2.read()))) {
        ap_phi_mux_end_game_write_assig_phi_fu_239_p6 = ap_const_lv1_0;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, first_run_loc_reg_174.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_i_fu_574_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, first_run_loc_reg_174.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_fu_574_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_i_fu_579_p2.read())))) {
        ap_phi_mux_end_game_write_assig_phi_fu_239_p6 = ap_const_lv1_1;
    } else {
        ap_phi_mux_end_game_write_assig_phi_fu_239_p6 = "X";
    }
}

void Gamelogic2::thread_ap_phi_mux_first_run_flag_1_phi_fu_254_p4() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, first_run_loc_reg_174.read())) {
            ap_phi_mux_first_run_flag_1_phi_fu_254_p4 = ap_const_lv1_1;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, first_run_loc_reg_174.read())) {
            ap_phi_mux_first_run_flag_1_phi_fu_254_p4 = first_run_flag_reg_160.read();
        } else {
            ap_phi_mux_first_run_flag_1_phi_fu_254_p4 = "X";
        }
    } else {
        ap_phi_mux_first_run_flag_1_phi_fu_254_p4 = "X";
    }
}

void Gamelogic2::thread_ap_phi_mux_first_run_new_1_phi_fu_265_p4() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, first_run_loc_reg_174.read())) {
            ap_phi_mux_first_run_new_1_phi_fu_265_p4 = ap_const_lv1_0;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, first_run_loc_reg_174.read())) {
            ap_phi_mux_first_run_new_1_phi_fu_265_p4 = ap_const_lv1_1;
        } else {
            ap_phi_mux_first_run_new_1_phi_fu_265_p4 = "X";
        }
    } else {
        ap_phi_mux_first_run_new_1_phi_fu_265_p4 = "X";
    }
}

void Gamelogic2::thread_ap_phi_mux_new_center_9_phi_fu_213_p6() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, game_over_load_reg_692.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_702.read()))) {
        ap_phi_mux_new_center_9_phi_fu_213_p6 = new_center_8_reg_696.read();
    } else {
        ap_phi_mux_new_center_9_phi_fu_213_p6 = new_center_9_reg_210.read();
    }
}

void Gamelogic2::thread_ap_phi_mux_new_center_s_phi_fu_276_p4() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, first_run_loc_reg_174.read())) {
            ap_phi_mux_new_center_s_phi_fu_276_p4 = ap_const_lv14_140;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, first_run_loc_reg_174.read())) {
            ap_phi_mux_new_center_s_phi_fu_276_p4 = ap_phi_mux_new_center_9_phi_fu_213_p6.read();
        } else {
            ap_phi_mux_new_center_s_phi_fu_276_p4 =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
        }
    } else {
        ap_phi_mux_new_center_s_phi_fu_276_p4 =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
    }
}

void Gamelogic2::thread_ap_phi_mux_right_wins_write_ass_phi_fu_224_p6() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, first_run_loc_reg_174.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_fu_574_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_i_fu_579_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, first_run_loc_reg_174.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_fu_574_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_i_fu_579_p2.read())))) {
        ap_phi_mux_right_wins_write_ass_phi_fu_224_p6 = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, first_run_loc_reg_174.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_i_fu_574_p2.read()))) {
        ap_phi_mux_right_wins_write_ass_phi_fu_224_p6 = ap_const_lv1_1;
    } else {
        ap_phi_mux_right_wins_write_ass_phi_fu_224_p6 = "X";
    }
}

void Gamelogic2::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Gamelogic2::thread_brmerge1_fu_316_p2() {
    brmerge1_fu_316_p2 = (tmp1_fu_312_p2.read() | tmp_fu_308_p2.read());
}

void Gamelogic2::thread_btn_count_loc_fu_332_p3() {
    btn_count_loc_fu_332_p3 = (!brmerge1_fu_316_p2.read()[0].is_01())? sc_lv<32>(): ((brmerge1_fu_316_p2.read()[0].to_bool())? tmp_s_fu_326_p2.read(): btn_count.read());
}

void Gamelogic2::thread_center_line_out_V() {
    center_line_out_V = (!tmp_3_fu_584_p3.read()[0].is_01())? sc_lv<12>(): ((tmp_3_fu_584_p3.read()[0].to_bool())? ap_const_lv12_0: tmp_4_fu_592_p1.read());
}

void Gamelogic2::thread_end_game() {
    end_game =  (sc_logic) (ap_phi_mux_end_game_write_assig_phi_fu_239_p6.read()[0]);
}

void Gamelogic2::thread_end_game_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, first_run_loc_reg_174.read()))) {
        end_game_ap_vld = ap_const_logic_1;
    } else {
        end_game_ap_vld = ap_const_logic_0;
    }
}

void Gamelogic2::thread_game_over_load_load_fu_340_p1() {
    game_over_load_load_fu_340_p1 = game_over.read();
}

void Gamelogic2::thread_grp_fu_545_ap_start() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_545_ap_start = ap_const_logic_1;
    } else {
        grp_fu_545_ap_start = ap_const_logic_0;
    }
}

void Gamelogic2::thread_grp_fu_545_p0() {
    grp_fu_545_p0 = (!ap_const_lv32_64.is_01() || !tmp_i_i_reg_706.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_64) + sc_biguint<32>(tmp_i_i_reg_706.read()));
}

void Gamelogic2::thread_grp_fu_545_p1() {
    grp_fu_545_p1 =  (sc_lv<8>) (ap_const_lv32_64);
}

void Gamelogic2::thread_new_center_1_cast_fu_349_p1() {
    new_center_1_cast_fu_349_p1 = esl_sext<14,13>(new_center_fu_344_p2.read());
}

void Gamelogic2::thread_new_center_1_fu_353_p2() {
    new_center_1_fu_353_p2 = (!new_center_cast_reg_666.read().is_01() || !ap_const_lv13_A.is_01())? sc_lv<13>(): (sc_biguint<13>(new_center_cast_reg_666.read()) + sc_biguint<13>(ap_const_lv13_A));
}

void Gamelogic2::thread_new_center_2_cast_fu_358_p1() {
    new_center_2_cast_fu_358_p1 = esl_zext<14,13>(new_center_1_fu_353_p2.read());
}

void Gamelogic2::thread_new_center_2_fu_386_p3() {
    new_center_2_fu_386_p3 = (!sel_tmp_fu_382_p2.read()[0].is_01())? sc_lv<14>(): ((sel_tmp_fu_382_p2.read()[0].to_bool())? new_center_1_cast_fu_349_p1.read(): p_1_cast_fu_378_p1.read());
}

void Gamelogic2::thread_new_center_3_fu_409_p3() {
    new_center_3_fu_409_p3 = (!sel_tmp4_fu_404_p2.read()[0].is_01())? sc_lv<14>(): ((sel_tmp4_fu_404_p2.read()[0].to_bool())? new_center_2_cast_fu_358_p1.read(): new_center_2_fu_386_p3.read());
}

void Gamelogic2::thread_new_center_4_fu_433_p3() {
    new_center_4_fu_433_p3 = (!sel_tmp1_fu_428_p2.read()[0].is_01())? sc_lv<14>(): ((sel_tmp1_fu_428_p2.read()[0].to_bool())? new_center_2_cast_fu_358_p1.read(): new_center_3_fu_409_p3.read());
}

void Gamelogic2::thread_new_center_5_fu_452_p3() {
    new_center_5_fu_452_p3 = (!sel_tmp7_fu_446_p2.read()[0].is_01())? sc_lv<14>(): ((sel_tmp7_fu_446_p2.read()[0].to_bool())? p_cast_fu_368_p1.read(): new_center_4_fu_433_p3.read());
}

void Gamelogic2::thread_new_center_6_fu_470_p3() {
    new_center_6_fu_470_p3 = (!sel_tmp10_fu_465_p2.read()[0].is_01())? sc_lv<14>(): ((sel_tmp10_fu_465_p2.read()[0].to_bool())? new_center_2_cast_fu_358_p1.read(): new_center_5_fu_452_p3.read());
}

void Gamelogic2::thread_new_center_7_fu_493_p3() {
    new_center_7_fu_493_p3 = (!sel_tmp12_fu_488_p2.read()[0].is_01())? sc_lv<14>(): ((sel_tmp12_fu_488_p2.read()[0].to_bool())? new_center_1_cast_fu_349_p1.read(): new_center_6_fu_470_p3.read());
}

void Gamelogic2::thread_new_center_8_fu_517_p3() {
    new_center_8_fu_517_p3 = (!sel_tmp14_fu_512_p2.read()[0].is_01())? sc_lv<14>(): ((sel_tmp14_fu_512_p2.read()[0].to_bool())? new_center_1_cast_fu_349_p1.read(): new_center_7_fu_493_p3.read());
}

void Gamelogic2::thread_new_center_cast1_fu_290_p1() {
    new_center_cast1_fu_290_p1 = esl_zext<14,12>(center_line_in_V.read());
}

void Gamelogic2::thread_new_center_cast_fu_294_p1() {
    new_center_cast_fu_294_p1 = esl_zext<13,12>(center_line_in_V.read());
}

void Gamelogic2::thread_new_center_fu_344_p2() {
    new_center_fu_344_p2 = (!new_center_cast_reg_666.read().is_01() || !ap_const_lv13_1FF6.is_01())? sc_lv<13>(): (sc_biguint<13>(new_center_cast_reg_666.read()) + sc_bigint<13>(ap_const_lv13_1FF6));
}

void Gamelogic2::thread_p_1_cast_fu_378_p1() {
    p_1_cast_fu_378_p1 = esl_zext<14,13>(p_1_fu_372_p3.read());
}

void Gamelogic2::thread_p_1_fu_372_p0() {
    p_1_fu_372_p0 =  (sc_lv<1>) (btn3.read());
}

void Gamelogic2::thread_p_1_fu_372_p3() {
    p_1_fu_372_p3 = (!p_1_fu_372_p0.read()[0].is_01())? sc_lv<13>(): ((p_1_fu_372_p0.read()[0].to_bool())? new_center_1_fu_353_p2.read(): new_center_cast_reg_666.read());
}

void Gamelogic2::thread_p_cast_fu_368_p1() {
    p_cast_fu_368_p1 = esl_sext<14,13>(p_s_fu_362_p3.read());
}

void Gamelogic2::thread_p_s_fu_362_p0() {
    p_s_fu_362_p0 =  (sc_lv<1>) (btn3.read());
}

void Gamelogic2::thread_p_s_fu_362_p3() {
    p_s_fu_362_p3 = (!p_s_fu_362_p0.read()[0].is_01())? sc_lv<13>(): ((p_s_fu_362_p0.read()[0].to_bool())? new_center_fu_344_p2.read(): new_center_cast_reg_666.read());
}

void Gamelogic2::thread_reset_game_in_read_read_fu_94_p2() {
    reset_game_in_read_read_fu_94_p2 =  (sc_lv<1>) (reset_game_in.read());
}

void Gamelogic2::thread_reset_game_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        reset_game_out = reset_game_in.read();
    } else {
        reset_game_out = reset_game_out_preg.read();
    }
}

void Gamelogic2::thread_right_out() {
    right_out =  (sc_logic) ((!tmp_2_fu_551_p1.read().is_01() || !ap_const_lv7_32.is_01())? sc_lv<1>(): (sc_biguint<7>(tmp_2_fu_551_p1.read()) > sc_biguint<7>(ap_const_lv7_32)))[0];
}

void Gamelogic2::thread_right_wins() {
    right_wins =  (sc_logic) (ap_phi_mux_right_wins_write_ass_phi_fu_224_p6.read()[0]);
}

void Gamelogic2::thread_sel_tmp10_fu_465_p0() {
    sel_tmp10_fu_465_p0 =  (sc_lv<1>) (btn0.read());
}

void Gamelogic2::thread_sel_tmp10_fu_465_p2() {
    sel_tmp10_fu_465_p2 = (sel_tmp10_fu_465_p0.read() & sel_tmp5_fu_460_p2.read());
}

void Gamelogic2::thread_sel_tmp11_fu_482_p2() {
    sel_tmp11_fu_482_p2 = (sel_tmp24_demorgan_fu_478_p2.read() ^ ap_const_lv1_1);
}

void Gamelogic2::thread_sel_tmp12_fu_488_p0() {
    sel_tmp12_fu_488_p0 =  (sc_lv<1>) (btn2.read());
}

void Gamelogic2::thread_sel_tmp12_fu_488_p2() {
    sel_tmp12_fu_488_p2 = (sel_tmp12_fu_488_p0.read() & sel_tmp11_fu_482_p2.read());
}

void Gamelogic2::thread_sel_tmp13_fu_506_p2() {
    sel_tmp13_fu_506_p2 = (sel_tmp31_demorgan_fu_501_p2.read() ^ ap_const_lv1_1);
}

void Gamelogic2::thread_sel_tmp14_fu_512_p0() {
    sel_tmp14_fu_512_p0 =  (sc_lv<1>) (btn1.read());
}

void Gamelogic2::thread_sel_tmp14_fu_512_p2() {
    sel_tmp14_fu_512_p2 = (sel_tmp14_fu_512_p0.read() & sel_tmp13_fu_506_p2.read());
}

void Gamelogic2::thread_sel_tmp1_fu_428_p1() {
    sel_tmp1_fu_428_p1 =  (sc_lv<1>) (btn1.read());
}

void Gamelogic2::thread_sel_tmp1_fu_428_p2() {
    sel_tmp1_fu_428_p2 = (sel_tmp9_fu_422_p2.read() & sel_tmp1_fu_428_p1.read());
}

void Gamelogic2::thread_sel_tmp24_demorgan_fu_478_p0() {
    sel_tmp24_demorgan_fu_478_p0 =  (sc_lv<1>) (right_in.read());
}

void Gamelogic2::thread_sel_tmp24_demorgan_fu_478_p1() {
    sel_tmp24_demorgan_fu_478_p1 =  (sc_lv<1>) (btn0.read());
}

void Gamelogic2::thread_sel_tmp24_demorgan_fu_478_p2() {
    sel_tmp24_demorgan_fu_478_p2 = (sel_tmp24_demorgan_fu_478_p0.read() | sel_tmp24_demorgan_fu_478_p1.read());
}

void Gamelogic2::thread_sel_tmp2_fu_394_p0() {
    sel_tmp2_fu_394_p0 =  (sc_lv<1>) (btn0.read());
}

void Gamelogic2::thread_sel_tmp2_fu_394_p2() {
    sel_tmp2_fu_394_p2 = (sel_tmp2_fu_394_p0.read() ^ ap_const_lv1_1);
}

void Gamelogic2::thread_sel_tmp31_demorgan_fu_501_p1() {
    sel_tmp31_demorgan_fu_501_p1 =  (sc_lv<1>) (btn2.read());
}

void Gamelogic2::thread_sel_tmp31_demorgan_fu_501_p2() {
    sel_tmp31_demorgan_fu_501_p2 = (sel_tmp24_demorgan_fu_478_p2.read() | sel_tmp31_demorgan_fu_501_p1.read());
}

void Gamelogic2::thread_sel_tmp3_fu_399_p0() {
    sel_tmp3_fu_399_p0 =  (sc_lv<1>) (right_in.read());
}

void Gamelogic2::thread_sel_tmp3_fu_399_p2() {
    sel_tmp3_fu_399_p2 = (sel_tmp3_fu_399_p0.read() & sel_tmp2_fu_394_p2.read());
}

void Gamelogic2::thread_sel_tmp4_fu_404_p1() {
    sel_tmp4_fu_404_p1 =  (sc_lv<1>) (btn2.read());
}

void Gamelogic2::thread_sel_tmp4_fu_404_p2() {
    sel_tmp4_fu_404_p2 = (sel_tmp3_fu_399_p2.read() & sel_tmp4_fu_404_p1.read());
}

void Gamelogic2::thread_sel_tmp5_fu_460_p0() {
    sel_tmp5_fu_460_p0 =  (sc_lv<1>) (right_in.read());
}

void Gamelogic2::thread_sel_tmp5_fu_460_p2() {
    sel_tmp5_fu_460_p2 = (sel_tmp5_fu_460_p0.read() ^ ap_const_lv1_1);
}

void Gamelogic2::thread_sel_tmp6_fu_441_p0() {
    sel_tmp6_fu_441_p0 =  (sc_lv<1>) (btn1.read());
}

void Gamelogic2::thread_sel_tmp6_fu_441_p2() {
    sel_tmp6_fu_441_p2 = (sel_tmp6_fu_441_p0.read() ^ ap_const_lv1_1);
}

void Gamelogic2::thread_sel_tmp7_fu_446_p2() {
    sel_tmp7_fu_446_p2 = (sel_tmp9_fu_422_p2.read() & sel_tmp6_fu_441_p2.read());
}

void Gamelogic2::thread_sel_tmp8_fu_417_p0() {
    sel_tmp8_fu_417_p0 =  (sc_lv<1>) (btn2.read());
}

void Gamelogic2::thread_sel_tmp8_fu_417_p2() {
    sel_tmp8_fu_417_p2 = (sel_tmp8_fu_417_p0.read() ^ ap_const_lv1_1);
}

void Gamelogic2::thread_sel_tmp9_fu_422_p2() {
    sel_tmp9_fu_422_p2 = (sel_tmp3_fu_399_p2.read() & sel_tmp8_fu_417_p2.read());
}

void Gamelogic2::thread_sel_tmp_fu_382_p0() {
    sel_tmp_fu_382_p0 =  (sc_lv<1>) (right_in.read());
}

void Gamelogic2::thread_sel_tmp_fu_382_p1() {
    sel_tmp_fu_382_p1 =  (sc_lv<1>) (btn0.read());
}

void Gamelogic2::thread_sel_tmp_fu_382_p2() {
    sel_tmp_fu_382_p2 = (sel_tmp_fu_382_p0.read() & sel_tmp_fu_382_p1.read());
}

void Gamelogic2::thread_tmp1_fu_312_p0() {
    tmp1_fu_312_p0 =  (sc_lv<1>) (btn0.read());
}

void Gamelogic2::thread_tmp1_fu_312_p1() {
    tmp1_fu_312_p1 =  (sc_lv<1>) (btn3.read());
}

void Gamelogic2::thread_tmp1_fu_312_p2() {
    tmp1_fu_312_p2 = (tmp1_fu_312_p0.read() | tmp1_fu_312_p1.read());
}

void Gamelogic2::thread_tmp_1_fu_525_p2() {
    tmp_1_fu_525_p2 = (!btn_count_loc_reg_685.read().is_01() || !ap_const_lv32_A.is_01())? sc_lv<1>(): (sc_bigint<32>(btn_count_loc_reg_685.read()) > sc_bigint<32>(ap_const_lv32_A));
}

void Gamelogic2::thread_tmp_1_i_fu_579_p2() {
    tmp_1_i_fu_579_p2 = (!center_line_in_V.read().is_01() || !ap_const_lv12_27F.is_01())? sc_lv<1>(): (sc_biguint<12>(center_line_in_V.read()) > sc_biguint<12>(ap_const_lv12_27F));
}

void Gamelogic2::thread_tmp_2_fu_551_p1() {
    tmp_2_fu_551_p1 = grp_fu_545_p2.read().range(7-1, 0);
}

void Gamelogic2::thread_tmp_3_fu_584_p3() {
    tmp_3_fu_584_p3 = ap_phi_mux_new_center_s_phi_fu_276_p4.read().range(13, 13);
}

void Gamelogic2::thread_tmp_4_fu_592_p1() {
    tmp_4_fu_592_p1 = ap_phi_mux_new_center_s_phi_fu_276_p4.read().range(12-1, 0);
}

void Gamelogic2::thread_tmp_fu_308_p0() {
    tmp_fu_308_p0 =  (sc_lv<1>) (btn1.read());
}

void Gamelogic2::thread_tmp_fu_308_p1() {
    tmp_fu_308_p1 =  (sc_lv<1>) (btn2.read());
}

void Gamelogic2::thread_tmp_fu_308_p2() {
    tmp_fu_308_p2 = (tmp_fu_308_p0.read() | tmp_fu_308_p1.read());
}

void Gamelogic2::thread_tmp_i_fu_574_p2() {
    tmp_i_fu_574_p2 = (!center_line_in_V.read().is_01() || !ap_const_lv12_0.is_01())? sc_lv<1>(): sc_lv<1>(center_line_in_V.read() == ap_const_lv12_0);
}

void Gamelogic2::thread_tmp_i_i_fu_534_p1() {
    tmp_i_i_fu_534_p1 = RandSeed.read();
}

void Gamelogic2::thread_tmp_i_i_fu_534_p2() {
    tmp_i_i_fu_534_p2 = (!ap_const_lv32_D.is_01() || !tmp_i_i_fu_534_p1.read().is_01())? sc_lv<32>(): sc_biguint<32>(ap_const_lv32_D) * sc_bigint<32>(tmp_i_i_fu_534_p1.read());
}

void Gamelogic2::thread_tmp_s_fu_326_p2() {
    tmp_s_fu_326_p2 = (!btn_count.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(btn_count.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void Gamelogic2::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, game_over_load_load_fu_340_p1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state39;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_525_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state39;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<39>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void Gamelogic2::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"btn0\" :  \"" << btn0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"btn1\" :  \"" << btn1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"btn2\" :  \"" << btn2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"btn3\" :  \"" << btn3.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"reset_game_in\" :  \"" << reset_game_in.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"reset_game_out\" :  \"" << reset_game_out.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"right_wins\" :  \"" << right_wins.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"end_game\" :  \"" << end_game.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"end_game_ap_vld\" :  \"" << end_game_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"center_line_out_V\" :  \"" << center_line_out_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"center_line_in_V\" :  \"" << center_line_in_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"right_out\" :  \"" << right_out.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"right_in\" :  \"" << right_in.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

