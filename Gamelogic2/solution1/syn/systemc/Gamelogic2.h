// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Gamelogic2_HH_
#define _Gamelogic2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Gamelogic2_urem_3bkb.h"

namespace ap_rtl {

struct Gamelogic2 : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_logic > btn0;
    sc_in< sc_logic > btn1;
    sc_in< sc_logic > btn2;
    sc_in< sc_logic > btn3;
    sc_out< sc_lv<12> > center_line_out_V;
    sc_in< sc_lv<12> > center_line_in_V;
    sc_out< sc_logic > right_out;
    sc_in< sc_logic > right_in;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    Gamelogic2(sc_module_name name);
    SC_HAS_PROCESS(Gamelogic2);

    ~Gamelogic2();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    Gamelogic2_urem_3bkb<1,36,32,8,32>* Gamelogic2_urem_3bkb_U1;
    sc_signal< sc_lv<37> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > btn_count;
    sc_signal< sc_lv<32> > RandSeed;
    sc_signal< sc_lv<1> > brmerge1_fu_140_p2;
    sc_signal< sc_lv<32> > btn_count_loc_fu_156_p3;
    sc_signal< sc_lv<12> > to_add_8_fu_342_p3;
    sc_signal< sc_lv<12> > to_add_8_reg_410;
    sc_signal< sc_lv<1> > tmp_7_fu_350_p2;
    sc_signal< sc_lv<1> > tmp_7_reg_415;
    sc_signal< sc_lv<32> > tmp_i_i_fu_360_p2;
    sc_signal< sc_lv<32> > tmp_i_i_reg_419;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > ap_phi_mux_btn_count_flag_1_phi_fu_111_p4;
    sc_signal< sc_lv<1> > btn_count_flag_1_reg_108;
    sc_signal< sc_logic > ap_CS_fsm_state37;
    sc_signal< sc_lv<32> > ap_phi_mux_btn_count_new_1_phi_fu_121_p4;
    sc_signal< sc_lv<32> > btn_count_new_1_reg_118;
    sc_signal< sc_lv<32> > grp_fu_371_p2;
    sc_signal< sc_lv<1> > tmp_fu_128_p0;
    sc_signal< sc_lv<1> > tmp_fu_128_p1;
    sc_signal< sc_lv<1> > tmp1_fu_134_p0;
    sc_signal< sc_lv<1> > tmp1_fu_134_p1;
    sc_signal< sc_lv<1> > tmp1_fu_134_p2;
    sc_signal< sc_lv<1> > tmp_fu_128_p2;
    sc_signal< sc_lv<32> > tmp_8_fu_150_p2;
    sc_signal< sc_lv<1> > p_s_fu_176_p0;
    sc_signal< sc_lv<12> > tmp_9_fu_164_p2;
    sc_signal< sc_lv<1> > p_1_fu_184_p0;
    sc_signal< sc_lv<12> > tmp_s_fu_170_p2;
    sc_signal< sc_lv<1> > sel_tmp_fu_192_p0;
    sc_signal< sc_lv<1> > sel_tmp_fu_192_p1;
    sc_signal< sc_lv<1> > sel_tmp_fu_192_p2;
    sc_signal< sc_lv<12> > p_1_fu_184_p3;
    sc_signal< sc_lv<1> > sel_tmp2_fu_206_p0;
    sc_signal< sc_lv<1> > sel_tmp3_fu_212_p0;
    sc_signal< sc_lv<1> > sel_tmp2_fu_206_p2;
    sc_signal< sc_lv<1> > sel_tmp3_fu_212_p2;
    sc_signal< sc_lv<1> > sel_tmp4_fu_218_p1;
    sc_signal< sc_lv<1> > sel_tmp4_fu_218_p2;
    sc_signal< sc_lv<12> > sel_tmp1_fu_198_p3;
    sc_signal< sc_lv<1> > sel_tmp8_fu_232_p0;
    sc_signal< sc_lv<1> > sel_tmp8_fu_232_p2;
    sc_signal< sc_lv<1> > sel_tmp9_fu_238_p2;
    sc_signal< sc_lv<1> > sel_tmp6_fu_244_p1;
    sc_signal< sc_lv<1> > sel_tmp6_fu_244_p2;
    sc_signal< sc_lv<12> > sel_tmp5_fu_224_p3;
    sc_signal< sc_lv<1> > sel_tmp10_fu_258_p0;
    sc_signal< sc_lv<1> > sel_tmp10_fu_258_p2;
    sc_signal< sc_lv<1> > sel_tmp11_fu_264_p2;
    sc_signal< sc_lv<12> > p_s_fu_176_p3;
    sc_signal< sc_lv<12> > sel_tmp7_fu_250_p3;
    sc_signal< sc_lv<1> > sel_tmp13_fu_278_p0;
    sc_signal< sc_lv<1> > sel_tmp14_fu_284_p0;
    sc_signal< sc_lv<1> > sel_tmp13_fu_278_p2;
    sc_signal< sc_lv<1> > sel_tmp14_fu_284_p2;
    sc_signal< sc_lv<12> > sel_tmp12_fu_270_p3;
    sc_signal< sc_lv<1> > sel_tmp24_demorgan_fu_298_p0;
    sc_signal< sc_lv<1> > sel_tmp24_demorgan_fu_298_p1;
    sc_signal< sc_lv<1> > sel_tmp24_demorgan_fu_298_p2;
    sc_signal< sc_lv<1> > sel_tmp17_fu_310_p0;
    sc_signal< sc_lv<1> > sel_tmp16_fu_304_p2;
    sc_signal< sc_lv<1> > sel_tmp17_fu_310_p2;
    sc_signal< sc_lv<12> > sel_tmp15_fu_290_p3;
    sc_signal< sc_lv<1> > sel_tmp31_demorgan_fu_324_p1;
    sc_signal< sc_lv<1> > sel_tmp31_demorgan_fu_324_p2;
    sc_signal< sc_lv<1> > sel_tmp20_fu_336_p0;
    sc_signal< sc_lv<1> > sel_tmp19_fu_330_p2;
    sc_signal< sc_lv<1> > sel_tmp20_fu_336_p2;
    sc_signal< sc_lv<12> > sel_tmp18_fu_316_p3;
    sc_signal< sc_lv<32> > tmp_i_i_fu_360_p1;
    sc_signal< sc_lv<32> > grp_fu_371_p0;
    sc_signal< sc_lv<8> > grp_fu_371_p1;
    sc_signal< sc_lv<7> > tmp_1_fu_377_p1;
    sc_signal< sc_logic > grp_fu_371_ap_start;
    sc_signal< sc_logic > grp_fu_371_ap_done;
    sc_signal< sc_lv<37> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<37> ap_ST_fsm_state1;
    static const sc_lv<37> ap_ST_fsm_state2;
    static const sc_lv<37> ap_ST_fsm_state3;
    static const sc_lv<37> ap_ST_fsm_state4;
    static const sc_lv<37> ap_ST_fsm_state5;
    static const sc_lv<37> ap_ST_fsm_state6;
    static const sc_lv<37> ap_ST_fsm_state7;
    static const sc_lv<37> ap_ST_fsm_state8;
    static const sc_lv<37> ap_ST_fsm_state9;
    static const sc_lv<37> ap_ST_fsm_state10;
    static const sc_lv<37> ap_ST_fsm_state11;
    static const sc_lv<37> ap_ST_fsm_state12;
    static const sc_lv<37> ap_ST_fsm_state13;
    static const sc_lv<37> ap_ST_fsm_state14;
    static const sc_lv<37> ap_ST_fsm_state15;
    static const sc_lv<37> ap_ST_fsm_state16;
    static const sc_lv<37> ap_ST_fsm_state17;
    static const sc_lv<37> ap_ST_fsm_state18;
    static const sc_lv<37> ap_ST_fsm_state19;
    static const sc_lv<37> ap_ST_fsm_state20;
    static const sc_lv<37> ap_ST_fsm_state21;
    static const sc_lv<37> ap_ST_fsm_state22;
    static const sc_lv<37> ap_ST_fsm_state23;
    static const sc_lv<37> ap_ST_fsm_state24;
    static const sc_lv<37> ap_ST_fsm_state25;
    static const sc_lv<37> ap_ST_fsm_state26;
    static const sc_lv<37> ap_ST_fsm_state27;
    static const sc_lv<37> ap_ST_fsm_state28;
    static const sc_lv<37> ap_ST_fsm_state29;
    static const sc_lv<37> ap_ST_fsm_state30;
    static const sc_lv<37> ap_ST_fsm_state31;
    static const sc_lv<37> ap_ST_fsm_state32;
    static const sc_lv<37> ap_ST_fsm_state33;
    static const sc_lv<37> ap_ST_fsm_state34;
    static const sc_lv<37> ap_ST_fsm_state35;
    static const sc_lv<37> ap_ST_fsm_state36;
    static const sc_lv<37> ap_ST_fsm_state37;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_24;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<12> ap_const_lv12_FF6;
    static const sc_lv<12> ap_const_lv12_A;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_64;
    static const sc_lv<7> ap_const_lv7_32;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state37();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_btn_count_flag_1_phi_fu_111_p4();
    void thread_ap_phi_mux_btn_count_new_1_phi_fu_121_p4();
    void thread_ap_ready();
    void thread_brmerge1_fu_140_p2();
    void thread_btn_count_loc_fu_156_p3();
    void thread_center_line_out_V();
    void thread_grp_fu_371_ap_start();
    void thread_grp_fu_371_p0();
    void thread_grp_fu_371_p1();
    void thread_p_1_fu_184_p0();
    void thread_p_1_fu_184_p3();
    void thread_p_s_fu_176_p0();
    void thread_p_s_fu_176_p3();
    void thread_right_out();
    void thread_sel_tmp10_fu_258_p0();
    void thread_sel_tmp10_fu_258_p2();
    void thread_sel_tmp11_fu_264_p2();
    void thread_sel_tmp12_fu_270_p3();
    void thread_sel_tmp13_fu_278_p0();
    void thread_sel_tmp13_fu_278_p2();
    void thread_sel_tmp14_fu_284_p0();
    void thread_sel_tmp14_fu_284_p2();
    void thread_sel_tmp15_fu_290_p3();
    void thread_sel_tmp16_fu_304_p2();
    void thread_sel_tmp17_fu_310_p0();
    void thread_sel_tmp17_fu_310_p2();
    void thread_sel_tmp18_fu_316_p3();
    void thread_sel_tmp19_fu_330_p2();
    void thread_sel_tmp1_fu_198_p3();
    void thread_sel_tmp20_fu_336_p0();
    void thread_sel_tmp20_fu_336_p2();
    void thread_sel_tmp24_demorgan_fu_298_p0();
    void thread_sel_tmp24_demorgan_fu_298_p1();
    void thread_sel_tmp24_demorgan_fu_298_p2();
    void thread_sel_tmp2_fu_206_p0();
    void thread_sel_tmp2_fu_206_p2();
    void thread_sel_tmp31_demorgan_fu_324_p1();
    void thread_sel_tmp31_demorgan_fu_324_p2();
    void thread_sel_tmp3_fu_212_p0();
    void thread_sel_tmp3_fu_212_p2();
    void thread_sel_tmp4_fu_218_p1();
    void thread_sel_tmp4_fu_218_p2();
    void thread_sel_tmp5_fu_224_p3();
    void thread_sel_tmp6_fu_244_p1();
    void thread_sel_tmp6_fu_244_p2();
    void thread_sel_tmp7_fu_250_p3();
    void thread_sel_tmp8_fu_232_p0();
    void thread_sel_tmp8_fu_232_p2();
    void thread_sel_tmp9_fu_238_p2();
    void thread_sel_tmp_fu_192_p0();
    void thread_sel_tmp_fu_192_p1();
    void thread_sel_tmp_fu_192_p2();
    void thread_tmp1_fu_134_p0();
    void thread_tmp1_fu_134_p1();
    void thread_tmp1_fu_134_p2();
    void thread_tmp_1_fu_377_p1();
    void thread_tmp_7_fu_350_p2();
    void thread_tmp_8_fu_150_p2();
    void thread_tmp_9_fu_164_p2();
    void thread_tmp_fu_128_p0();
    void thread_tmp_fu_128_p1();
    void thread_tmp_fu_128_p2();
    void thread_tmp_i_i_fu_360_p1();
    void thread_tmp_i_i_fu_360_p2();
    void thread_tmp_s_fu_170_p2();
    void thread_to_add_8_fu_342_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
